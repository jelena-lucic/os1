GAS LISTING /tmp/ccMdmw3p.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 4D41494E 		.string	"MAIN START\n"
   9      20535441 
   9      52540A00 
  10 000c 00000000 		.align	3
  11              	.LC1:
  12 0010 46696E69 		.string	"Finished\n"
  12      73686564 
  12      0A00
  13              		.text
  14              		.align	2
  15              		.globl	main
  17              	main:
  18              	.LFB42:
  19              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/tcb.hpp"
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../h/syscall_c.hpp"
   4:src/main.cpp  **** #include "../test/printing.hpp"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** extern void userMain(void* arg);
   7:src/main.cpp  **** 
   8:src/main.cpp  **** int main() {
  20              		.loc 1 8 12
  21              		.cfi_startproc
  22 0000 130101FD 		addi	sp,sp,-48
  23              		.cfi_def_cfa_offset 48
  24 0004 23341102 		sd	ra,40(sp)
  25 0008 23308102 		sd	s0,32(sp)
  26 000c 233C9100 		sd	s1,24(sp)
  27              		.cfi_offset 1, -8
  28              		.cfi_offset 8, -16
  29              		.cfi_offset 9, -24
  30 0010 13040103 		addi	s0,sp,48
  31              		.cfi_def_cfa 8, 0
   9:src/main.cpp  **** 
  10:src/main.cpp  ****     printString("MAIN START\n");
  32              		.loc 1 10 5
  33              		.loc 1 10 16 is_stmt 0
  34 0014 17050000 		lla	a0,.LC0
  34      13050500 
  35 001c 97000000 		call	_Z11printStringPKc@plt
  35      E7800000 
  36              	.LVL0:
  11:src/main.cpp  ****     TCB::running = TCB::createThread(nullptr, nullptr, nullptr);
  37              		.loc 1 11 5 is_stmt 1
  38              		.loc 1 11 37 is_stmt 0
  39 0024 13060000 		li	a2,0
  40 0028 93050000 		li	a1,0
  41 002c 13050000 		li	a0,0
GAS LISTING /tmp/ccMdmw3p.s 			page 2


  42 0030 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
  42      E7800000 
  43              	.LVL1:
  44              		.loc 1 11 18
  45 0038 97070000 		la	a5,_ZN3TCB7runningE
  45      83B70700 
  46 0040 23B0A700 		sd	a0,0(a5)
  12:src/main.cpp  ****     TCB::running->start();
  47              		.loc 1 12 5 is_stmt 1
  48              		.loc 1 12 24 is_stmt 0
  49 0044 97000000 		call	_ZN3TCB5startEv@plt
  49      E7800000 
  50              	.LVL2:
  13:src/main.cpp  **** 
  14:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  51              		.loc 1 14 5 is_stmt 1
  52              		.loc 1 14 19 is_stmt 0
  53 004c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  53      83B70700 
  54              	.LVL3:
  55              	.LBB11:
  56              	.LBB12:
  57              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  10:src/../h/riscv.hpp ****     static void popSppSpie();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // read register scause
  13:src/../h/riscv.hpp ****     static uint64 r_scause();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // write register scause
  16:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // read register sepc
  19:src/../h/riscv.hpp ****     static uint64 r_sepc();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // write register sepc
  22:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register stvec
  25:src/../h/riscv.hpp ****     static uint64 r_stvec();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register stvec
  28:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register stval
  31:src/../h/riscv.hpp ****     static uint64 r_stval();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register stval
  34:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
GAS LISTING /tmp/ccMdmw3p.s 			page 3


  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     enum BitMaskSip
  37:src/../h/riscv.hpp ****     {
  38:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  39:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  40:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  41:src/../h/riscv.hpp ****     };
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // mask set register sip
  44:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // mask clear register sip
  47:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // read register sip
  50:src/../h/riscv.hpp ****     static uint64 r_sip();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // write register sip
  53:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     enum BitMaskSstatus
  56:src/../h/riscv.hpp ****     {
  57:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  58:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  59:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  60:src/../h/riscv.hpp ****     };
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // mask set register sstatus
  63:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask clear register sstatus
  66:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // read register sstatus
  69:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // write register sstatus
  72:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     //read a0
  75:src/../h/riscv.hpp ****     static long r_a0();
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     //write a0
  78:src/../h/riscv.hpp ****     static void w_a0(long a0);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     //read a1
  81:src/../h/riscv.hpp ****     static uint64 r_a1();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     //write a1
  84:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     //read a2
  87:src/../h/riscv.hpp ****     static uint64 r_a2();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     //write a2
  90:src/../h/riscv.hpp ****     static void w_a2(uint64 a2);
  91:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccMdmw3p.s 			page 4


  92:src/../h/riscv.hpp ****     //read a3
  93:src/../h/riscv.hpp ****     static uint64 r_a3();
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     //write a3
  96:src/../h/riscv.hpp ****     static void w_a3(uint64 a3);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     //read a4
  99:src/../h/riscv.hpp ****     static uint64 r_a4();
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp ****     //write a3
 102:src/../h/riscv.hpp ****     static void w_a4(uint64 a4);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     // supervisor trap
 105:src/../h/riscv.hpp ****     static void supervisorTrap();
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** private:
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     // supervisor trap handler
 110:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** };
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
 115:src/../h/riscv.hpp ****     uint64 volatile scause;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 117:src/../h/riscv.hpp ****     return scause;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 125:src/../h/riscv.hpp ****     uint64 volatile sepc;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 127:src/../h/riscv.hpp ****     return sepc;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 135:src/../h/riscv.hpp ****     uint64 volatile stvec;
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 137:src/../h/riscv.hpp ****     return stvec;
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  58              		.loc 2 141 5 is_stmt 1
  59              		.loc 2 141 69 is_stmt 0
  60              	#APP
  61              	# 141 "src/../h/riscv.hpp" 1
 142              	}
  62              		csrw stvec, a5
  63              	# 0 "" 2
GAS LISTING /tmp/ccMdmw3p.s 			page 5


  64              	.LVL4:
  65              	#NO_APP
  66              	.LBE12:
  67              	.LBE11:
  15:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  68              		.loc 1 15 5 is_stmt 1
  69              	.LBB13:
  70              	.LBB14:
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 145:src/../h/riscv.hpp ****     uint64 volatile stval;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 147:src/../h/riscv.hpp ****     return stval;
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 163:src/../h/riscv.hpp ****     uint64 volatile sip;
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 165:src/../h/riscv.hpp ****     return sip;
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 173:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  71              		.loc 2 173 5
  72              		.loc 2 173 68 is_stmt 0
  73 0058 93072000 		li	a5,2
  74              	#APP
  75              	# 173 "src/../h/riscv.hpp" 1
 174              	}
  76              		csrs sstatus, a5
  77              	# 0 "" 2
  78              	.LVL5:
  79              	#NO_APP
  80              	.LBE14:
  81              	.LBE13:
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     thread_t handle;
  82              		.loc 1 17 5 is_stmt 1
  18:src/main.cpp  ****     thread_create(&handle, userMain, nullptr);
  83              		.loc 1 18 5
  84              		.loc 1 18 18 is_stmt 0
GAS LISTING /tmp/ccMdmw3p.s 			page 6


  85 0060 13060000 		li	a2,0
  86 0064 97050000 		la	a1,_Z8userMainPv
  86      83B50500 
  87 006c 130584FD 		addi	a0,s0,-40
  88 0070 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  88      E7800000 
  89              	.LVL6:
  19:src/main.cpp  ****     thread_start(handle);
  90              		.loc 1 19 5 is_stmt 1
  91              		.loc 1 19 17 is_stmt 0
  92 0078 033584FD 		ld	a0,-40(s0)
  93 007c 97000000 		call	_Z12thread_startP3TCB@plt
  93      E7800000 
  94              	.LVL7:
  95              	.L3:
  20:src/main.cpp  **** 
  21:src/main.cpp  ****     while(!handle->isFinished()) {
  96              		.loc 1 21 5 is_stmt 1
  97              		.loc 1 21 11
  98              		.loc 1 21 30 is_stmt 0
  99 0084 833484FD 		ld	s1,-40(s0)
 100              	.LVL8:
 101              	.LBB15:
 102              	.LBB16:
 103              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_HPP
   2:src/../h/tcb.hpp **** #define TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** #include "../test/printing.hpp"
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** // Thread Control Block
   9:src/../h/tcb.hpp **** class TCB
  10:src/../h/tcb.hpp **** {
  11:src/../h/tcb.hpp **** public:
  12:src/../h/tcb.hpp ****     enum State {CREATED, READY, RUNNING, FINISHED};
  13:src/../h/tcb.hpp **** 
  14:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp ****     bool isFinished() const { return this->state == FINISHED; }
 104              		.loc 3 16 31 is_stmt 1
 105              		.loc 3 16 44 is_stmt 0
 106 0088 03A78403 		lw	a4,56(s1)
 107              	.LVL9:
 108              	.LBE16:
 109              	.LBE15:
 110              		.loc 1 21 11
 111 008c 93073000 		li	a5,3
 112 0090 6308F700 		beq	a4,a5,.L2
  22:src/main.cpp  ****         thread_dispatch();
 113              		.loc 1 22 9 is_stmt 1
 114              		.loc 1 22 24 is_stmt 0
 115 0094 97000000 		call	_Z15thread_dispatchv@plt
 115      E7800000 
 116              	.LVL10:
 117 009c 6FF09FFE 		j	.L3
GAS LISTING /tmp/ccMdmw3p.s 			page 7


 118              	.L2:
  23:src/main.cpp  ****     } // join user main
  24:src/main.cpp  **** 
  25:src/main.cpp  ****     delete handle;
 119              		.loc 1 25 5 is_stmt 1
 120              		.loc 1 25 18 is_stmt 0
 121 00a0 63800402 		beqz	s1,.L4
 122              	.LVL11:
 123              	.LBB17:
 124              	.LBB18:
  14:src/../h/tcb.hpp **** 
 125              		.loc 3 14 14 is_stmt 1
  14:src/../h/tcb.hpp **** 
 126              		.loc 3 14 23 is_stmt 0
 127 00a4 03B58401 		ld	a0,24(s1)
  14:src/../h/tcb.hpp **** 
 128              		.loc 3 14 28
 129 00a8 63060500 		beqz	a0,.L5
  14:src/../h/tcb.hpp **** 
 130              		.loc 3 14 23
 131 00ac 97000000 		call	_ZdaPv@plt
 131      E7800000 
 132              	.LVL12:
 133              	.L5:
 134              	.LBE18:
 135              	.LBE17:
 136              		.loc 1 25 12
 137 00b4 13850400 		mv	a0,s1
 138 00b8 97000000 		call	_ZdlPv@plt
 138      E7800000 
 139              	.LVL13:
 140              	.L4:
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     printString("Finished\n");
 141              		.loc 1 27 5 is_stmt 1
 142              		.loc 1 27 16 is_stmt 0
 143 00c0 17050000 		lla	a0,.LC1
 143      13050500 
 144 00c8 97000000 		call	_Z11printStringPKc@plt
 144      E7800000 
 145              	.LVL14:
  28:src/main.cpp  **** 
  29:src/main.cpp  ****     return 0;
 146              		.loc 1 29 5 is_stmt 1
  30:src/main.cpp  **** }
 147              		.loc 1 30 1 is_stmt 0
 148 00d0 13050000 		li	a0,0
 149 00d4 83308102 		ld	ra,40(sp)
 150              		.cfi_restore 1
 151 00d8 03340102 		ld	s0,32(sp)
 152              		.cfi_restore 8
 153              		.cfi_def_cfa 2, 48
 154 00dc 83348101 		ld	s1,24(sp)
 155              		.cfi_restore 9
 156 00e0 13010103 		addi	sp,sp,48
 157              		.cfi_def_cfa_offset 0
 158 00e4 67800000 		jr	ra
GAS LISTING /tmp/ccMdmw3p.s 			page 8


 159              		.cfi_endproc
 160              	.LFE42:
 162              	.Letext0:
 163              		.file 4 "src/../h/../lib/hw.h"
 164              		.file 5 "src/../h/../test/../h/syscall_c.hpp"
 165              		.file 6 "src/../h/../test/printing.hpp"
GAS LISTING /tmp/ccMdmw3p.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccMdmw3p.s:17     .text:0000000000000000 main
     /tmp/ccMdmw3p.s:21     .text:0000000000000000 .L0 
     /tmp/ccMdmw3p.s:22     .text:0000000000000000 .L0 
     /tmp/ccMdmw3p.s:23     .text:0000000000000004 .L0 
     /tmp/ccMdmw3p.s:27     .text:0000000000000010 .L0 
     /tmp/ccMdmw3p.s:28     .text:0000000000000010 .L0 
     /tmp/ccMdmw3p.s:29     .text:0000000000000010 .L0 
     /tmp/ccMdmw3p.s:31     .text:0000000000000014 .L0 
     /tmp/ccMdmw3p.s:33     .text:0000000000000014 .L0 
     /tmp/ccMdmw3p.s:34     .text:0000000000000014 .L0 
     /tmp/ccMdmw3p.s:38     .text:0000000000000024 .L0 
     /tmp/ccMdmw3p.s:39     .text:0000000000000024 .L0 
     /tmp/ccMdmw3p.s:45     .text:0000000000000038 .L0 
     /tmp/ccMdmw3p.s:48     .text:0000000000000044 .L0 
     /tmp/ccMdmw3p.s:49     .text:0000000000000044 .L0 
     /tmp/ccMdmw3p.s:52     .text:000000000000004c .L0 
     /tmp/ccMdmw3p.s:53     .text:000000000000004c .L0 
     /tmp/ccMdmw3p.s:59     .text:0000000000000054 .L0 
  src/../h/riscv.hpp:141    .text:0000000000000054 .L0 
     /tmp/ccMdmw3p.s:71     .text:0000000000000058 .L0 
     /tmp/ccMdmw3p.s:72     .text:0000000000000058 .L0 
     /tmp/ccMdmw3p.s:73     .text:0000000000000058 .L0 
     /tmp/ccMdmw3p.s:83     .text:0000000000000060 .L0 
     /tmp/ccMdmw3p.s:84     .text:0000000000000060 .L0 
     /tmp/ccMdmw3p.s:85     .text:0000000000000060 .L0 
     /tmp/ccMdmw3p.s:91     .text:0000000000000078 .L0 
     /tmp/ccMdmw3p.s:92     .text:0000000000000078 .L0 
     /tmp/ccMdmw3p.s:97     .text:0000000000000084 .L0 
     /tmp/ccMdmw3p.s:98     .text:0000000000000084 .L0 
     /tmp/ccMdmw3p.s:99     .text:0000000000000084 .L0 
     /tmp/ccMdmw3p.s:105    .text:0000000000000088 .L0 
     /tmp/ccMdmw3p.s:106    .text:0000000000000088 .L0 
     /tmp/ccMdmw3p.s:111    .text:000000000000008c .L0 
     /tmp/ccMdmw3p.s:114    .text:0000000000000094 .L0 
     /tmp/ccMdmw3p.s:115    .text:0000000000000094 .L0 
     /tmp/ccMdmw3p.s:120    .text:00000000000000a0 .L0 
     /tmp/ccMdmw3p.s:121    .text:00000000000000a0 .L0 
     /tmp/ccMdmw3p.s:126    .text:00000000000000a4 .L0 
     /tmp/ccMdmw3p.s:127    .text:00000000000000a4 .L0 
     /tmp/ccMdmw3p.s:129    .text:00000000000000a8 .L0 
     /tmp/ccMdmw3p.s:131    .text:00000000000000ac .L0 
     /tmp/ccMdmw3p.s:137    .text:00000000000000b4 .L0 
     /tmp/ccMdmw3p.s:142    .text:00000000000000c0 .L0 
     /tmp/ccMdmw3p.s:143    .text:00000000000000c0 .L0 
     /tmp/ccMdmw3p.s:147    .text:00000000000000d0 .L0 
     /tmp/ccMdmw3p.s:148    .text:00000000000000d0 .L0 
     /tmp/ccMdmw3p.s:150    .text:00000000000000d8 .L0 
     /tmp/ccMdmw3p.s:152    .text:00000000000000dc .L0 
     /tmp/ccMdmw3p.s:153    .text:00000000000000dc .L0 
     /tmp/ccMdmw3p.s:155    .text:00000000000000e0 .L0 
     /tmp/ccMdmw3p.s:157    .text:00000000000000e4 .L0 
     /tmp/ccMdmw3p.s:159    .text:00000000000000e8 .L0 
     /tmp/ccMdmw3p.s:166    .text:00000000000000e8 .L0 
     /tmp/ccMdmw3p.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccMdmw3p.s:34     .text:0000000000000014 .L0 
GAS LISTING /tmp/ccMdmw3p.s 			page 10


     /tmp/ccMdmw3p.s:45     .text:0000000000000038 .L0 
     /tmp/ccMdmw3p.s:53     .text:000000000000004c .L0 
     /tmp/ccMdmw3p.s:86     .text:0000000000000064 .L0 
     /tmp/ccMdmw3p.s:11     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccMdmw3p.s:143    .text:00000000000000c0 .L0 
     /tmp/ccMdmw3p.s:118    .text:00000000000000a0 .L2
     /tmp/ccMdmw3p.s:95     .text:0000000000000084 .L3
     /tmp/ccMdmw3p.s:140    .text:00000000000000c0 .L4
     /tmp/ccMdmw3p.s:133    .text:00000000000000b4 .L5
     /tmp/ccMdmw3p.s:1126   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccMdmw3p.s:2226   .debug_str:0000000000000634 .LASF129
     /tmp/ccMdmw3p.s:2108   .debug_str:000000000000031c .LASF130
     /tmp/ccMdmw3p.s:2172   .debug_str:00000000000004a3 .LASF131
     /tmp/ccMdmw3p.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccMdmw3p.s:162    .text:00000000000000e8 .Letext0
     /tmp/ccMdmw3p.s:1988   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccMdmw3p.s:2138   .debug_str:00000000000003ca .LASF0
     /tmp/ccMdmw3p.s:2154   .debug_str:000000000000040f .LASF1
     /tmp/ccMdmw3p.s:2128   .debug_str:0000000000000388 .LASF2
     /tmp/ccMdmw3p.s:2094   .debug_str:00000000000002cc .LASF4
     /tmp/ccMdmw3p.s:2196   .debug_str:000000000000055d .LASF3
     /tmp/ccMdmw3p.s:2014   .debug_str:000000000000008a .LASF5
     /tmp/ccMdmw3p.s:2158   .debug_str:000000000000042a .LASF6
     /tmp/ccMdmw3p.s:2136   .debug_str:00000000000003b7 .LASF7
     /tmp/ccMdmw3p.s:2236   .debug_str:0000000000000727 .LASF8
     /tmp/ccMdmw3p.s:2082   .debug_str:000000000000026f .LASF9
     /tmp/ccMdmw3p.s:2174   .debug_str:00000000000004bf .LASF10
     /tmp/ccMdmw3p.s:2230   .debug_str:0000000000000700 .LASF11
     /tmp/ccMdmw3p.s:2020   .debug_str:00000000000000a2 .LASF12
     /tmp/ccMdmw3p.s:1996   .debug_str:0000000000000022 .LASF13
     /tmp/ccMdmw3p.s:2036   .debug_str:0000000000000111 .LASF14
     /tmp/ccMdmw3p.s:2188   .debug_str:0000000000000517 .LASF15
     /tmp/ccMdmw3p.s:2048   .debug_str:0000000000000164 .LASF16
     /tmp/ccMdmw3p.s:2088   .debug_str:0000000000000298 .LASF45
     /tmp/ccMdmw3p.s:2228   .debug_str:00000000000006f8 .LASF17
     /tmp/ccMdmw3p.s:2208   .debug_str:00000000000005b3 .LASF18
     /tmp/ccMdmw3p.s:2166   .debug_str:0000000000000464 .LASF19
     /tmp/ccMdmw3p.s:2206   .debug_str:00000000000005aa .LASF20
     /tmp/ccMdmw3p.s:2002   .debug_str:0000000000000047 .LASF132
     /tmp/ccMdmw3p.s:2060   .debug_str:00000000000001e0 .LASF27
     /tmp/ccMdmw3p.s:2182   .debug_str:00000000000004fb .LASF29
     /tmp/ccMdmw3p.s:2160   .debug_str:000000000000043d .LASF21
     /tmp/ccMdmw3p.s:2080   .debug_str:0000000000000258 .LASF23
     /tmp/ccMdmw3p.s:2118   .debug_str:0000000000000351 .LASF22
     /tmp/ccMdmw3p.s:2012   .debug_str:0000000000000071 .LASF24
     /tmp/ccMdmw3p.s:2152   .debug_str:0000000000000409 .LASF25
     /tmp/ccMdmw3p.s:2126   .debug_str:0000000000000378 .LASF26
     /tmp/ccMdmw3p.s:2106   .debug_str:000000000000030f .LASF28
     /tmp/ccMdmw3p.s:2252   .debug_str:00000000000007a7 .LASF30
     /tmp/ccMdmw3p.s:2184   .debug_str:0000000000000507 .LASF31
     /tmp/ccMdmw3p.s:2064   .debug_str:00000000000001ee .LASF133
     /tmp/ccMdmw3p.s:2164   .debug_str:000000000000044d .LASF134
     /tmp/ccMdmw3p.s:2100   .debug_str:00000000000002f7 .LASF32
     /tmp/ccMdmw3p.s:2090   .debug_str:000000000000029e .LASF33
     /tmp/ccMdmw3p.s:2104   .debug_str:0000000000000307 .LASF34
     /tmp/ccMdmw3p.s:2146   .debug_str:00000000000003f4 .LASF35
     /tmp/ccMdmw3p.s:2008   .debug_str:0000000000000066 .LASF36
GAS LISTING /tmp/ccMdmw3p.s 			page 11


     /tmp/ccMdmw3p.s:2120   .debug_str:000000000000035e .LASF37
     /tmp/ccMdmw3p.s:2028   .debug_str:00000000000000cd .LASF39
     /tmp/ccMdmw3p.s:2240   .debug_str:000000000000074c .LASF135
     /tmp/ccMdmw3p.s:2092   .debug_str:00000000000002a4 .LASF136
     /tmp/ccMdmw3p.s:2142   .debug_str:00000000000003de .LASF38
     /tmp/ccMdmw3p.s:2070   .debug_str:0000000000000212 .LASF40
     /tmp/ccMdmw3p.s:2114   .debug_str:000000000000033b .LASF50
     /tmp/ccMdmw3p.s:2256   .debug_str:00000000000007e1 .LASF52
     /tmp/ccMdmw3p.s:2198   .debug_str:000000000000056f .LASF41
     /tmp/ccMdmw3p.s:1990   .debug_str:0000000000000000 .LASF42
     /tmp/ccMdmw3p.s:2072   .debug_str:0000000000000225 .LASF43
     /tmp/ccMdmw3p.s:2150   .debug_str:0000000000000403 .LASF44
     /tmp/ccMdmw3p.s:2052   .debug_str:000000000000018e .LASF46
     /tmp/ccMdmw3p.s:2044   .debug_str:0000000000000153 .LASF47
     /tmp/ccMdmw3p.s:2110   .debug_str:0000000000000329 .LASF48
     /tmp/ccMdmw3p.s:2016   .debug_str:0000000000000091 .LASF49
     /tmp/ccMdmw3p.s:2186   .debug_str:000000000000050c .LASF51
     /tmp/ccMdmw3p.s:2254   .debug_str:00000000000007c9 .LASF53
     /tmp/ccMdmw3p.s:1998   .debug_str:0000000000000032 .LASF55
     /tmp/ccMdmw3p.s:2210   .debug_str:00000000000005b9 .LASF57
     /tmp/ccMdmw3p.s:2062   .debug_str:00000000000001e5 .LASF54
     /tmp/ccMdmw3p.s:2042   .debug_str:000000000000013e .LASF60
     /tmp/ccMdmw3p.s:2200   .debug_str:0000000000000580 .LASF56
     /tmp/ccMdmw3p.s:2180   .debug_str:00000000000004e8 .LASF58
     /tmp/ccMdmw3p.s:2224   .debug_str:000000000000062d .LASF59
     /tmp/ccMdmw3p.s:2216   .debug_str:00000000000005ed .LASF61
     /tmp/ccMdmw3p.s:2156   .debug_str:0000000000000422 .LASF62
     /tmp/ccMdmw3p.s:2050   .debug_str:000000000000017a .LASF63
     /tmp/ccMdmw3p.s:1992   .debug_str:0000000000000009 .LASF64
     /tmp/ccMdmw3p.s:2202   .debug_str:0000000000000587 .LASF65
     /tmp/ccMdmw3p.s:2066   .debug_str:00000000000001f6 .LASF66
     /tmp/ccMdmw3p.s:2242   .debug_str:000000000000075a .LASF67
     /tmp/ccMdmw3p.s:2260   .debug_str:00000000000007fb .LASF68
     /tmp/ccMdmw3p.s:2068   .debug_str:00000000000001fe .LASF69
     /tmp/ccMdmw3p.s:2140   .debug_str:00000000000003d7 .LASF70
     /tmp/ccMdmw3p.s:2250   .debug_str:0000000000000794 .LASF71
     /tmp/ccMdmw3p.s:2234   .debug_str:0000000000000720 .LASF72
     /tmp/ccMdmw3p.s:2076   .debug_str:000000000000023f .LASF73
     /tmp/ccMdmw3p.s:2078   .debug_str:0000000000000252 .LASF74
     /tmp/ccMdmw3p.s:2222   .debug_str:000000000000061b .LASF75
     /tmp/ccMdmw3p.s:2006   .debug_str:0000000000000060 .LASF76
     /tmp/ccMdmw3p.s:2264   .debug_str:0000000000000808 .LASF77
     /tmp/ccMdmw3p.s:2258   .debug_str:00000000000007f0 .LASF78
     /tmp/ccMdmw3p.s:2192   .debug_str:000000000000053e .LASF79
     /tmp/ccMdmw3p.s:2102   .debug_str:00000000000002fc .LASF80
     /tmp/ccMdmw3p.s:2212   .debug_str:00000000000005ce .LASF81
     /tmp/ccMdmw3p.s:2034   .debug_str:0000000000000107 .LASF82
     /tmp/ccMdmw3p.s:2168   .debug_str:000000000000046c .LASF83
     /tmp/ccMdmw3p.s:2130   .debug_str:0000000000000396 .LASF84
     /tmp/ccMdmw3p.s:2086   .debug_str:0000000000000282 .LASF85
     /tmp/ccMdmw3p.s:2220   .debug_str:0000000000000616 .LASF86
     /tmp/ccMdmw3p.s:2116   .debug_str:0000000000000340 .LASF87
     /tmp/ccMdmw3p.s:2084   .debug_str:000000000000027d .LASF88
     /tmp/ccMdmw3p.s:2132   .debug_str:00000000000003a0 .LASF89
     /tmp/ccMdmw3p.s:2112   .debug_str:0000000000000336 .LASF90
     /tmp/ccMdmw3p.s:2098   .debug_str:00000000000002e6 .LASF91
     /tmp/ccMdmw3p.s:2018   .debug_str:000000000000009d .LASF92
GAS LISTING /tmp/ccMdmw3p.s 			page 12


     /tmp/ccMdmw3p.s:1994   .debug_str:0000000000000011 .LASF93
     /tmp/ccMdmw3p.s:2010   .debug_str:000000000000006c .LASF94
     /tmp/ccMdmw3p.s:2232   .debug_str:000000000000070f .LASF95
     /tmp/ccMdmw3p.s:2148   .debug_str:00000000000003fe .LASF96
     /tmp/ccMdmw3p.s:2026   .debug_str:00000000000000bc .LASF97
     /tmp/ccMdmw3p.s:2162   .debug_str:0000000000000448 .LASF98
     /tmp/ccMdmw3p.s:2190   .debug_str:000000000000052d .LASF99
     /tmp/ccMdmw3p.s:2022   .debug_str:00000000000000b2 .LASF100
     /tmp/ccMdmw3p.s:2038   .debug_str:000000000000011d .LASF101
     /tmp/ccMdmw3p.s:2122   .debug_str:000000000000036c .LASF102
     /tmp/ccMdmw3p.s:2244   .debug_str:000000000000076e .LASF103
     /tmp/ccMdmw3p.s:2024   .debug_str:00000000000000b7 .LASF104
     /tmp/ccMdmw3p.s:2004   .debug_str:000000000000004f .LASF105
     /tmp/ccMdmw3p.s:2204   .debug_str:000000000000059b .LASF106
     /tmp/ccMdmw3p.s:2030   .debug_str:00000000000000e6 .LASF107
     /tmp/ccMdmw3p.s:2238   .debug_str:0000000000000737 .LASF108
     /tmp/ccMdmw3p.s:2054   .debug_str:000000000000019d .LASF109
     /tmp/ccMdmw3p.s:2246   .debug_str:000000000000077f .LASF110
     /tmp/ccMdmw3p.s:2032   .debug_str:0000000000000102 .LASF111
     /tmp/ccMdmw3p.s:18     .text:0000000000000000 .LFB42
     /tmp/ccMdmw3p.s:160    .text:00000000000000e8 .LFE42
     /tmp/ccMdmw3p.s:2214   .debug_str:00000000000005e6 .LASF112
     /tmp/ccMdmw3p.s:55     .text:0000000000000054 .LBB11
     /tmp/ccMdmw3p.s:67     .text:0000000000000058 .LBE11
     /tmp/ccMdmw3p.s:69     .text:0000000000000058 .LBB13
     /tmp/ccMdmw3p.s:81     .text:0000000000000060 .LBE13
     /tmp/ccMdmw3p.s:1953   .debug_loc:0000000000000000 .LLST0
     /tmp/ccMdmw3p.s:101    .text:0000000000000088 .LBB15
     /tmp/ccMdmw3p.s:109    .text:000000000000008c .LBE15
     /tmp/ccMdmw3p.s:1961   .debug_loc:0000000000000024 .LLST1
     /tmp/ccMdmw3p.s:123    .text:00000000000000a4 .LBB17
     /tmp/ccMdmw3p.s:135    .text:00000000000000b4 .LBE17
     /tmp/ccMdmw3p.s:1968   .debug_loc:0000000000000047 .LLST2
     /tmp/ccMdmw3p.s:132    .text:00000000000000b4 .LVL12
     /tmp/ccMdmw3p.s:36     .text:0000000000000024 .LVL0
     /tmp/ccMdmw3p.s:43     .text:0000000000000038 .LVL1
     /tmp/ccMdmw3p.s:50     .text:000000000000004c .LVL2
     /tmp/ccMdmw3p.s:89     .text:0000000000000078 .LVL6
     /tmp/ccMdmw3p.s:94     .text:0000000000000084 .LVL7
     /tmp/ccMdmw3p.s:116    .text:000000000000009c .LVL10
     /tmp/ccMdmw3p.s:139    .text:00000000000000c0 .LVL13
     /tmp/ccMdmw3p.s:145    .text:00000000000000d0 .LVL14
     /tmp/ccMdmw3p.s:2262   .debug_str:0000000000000803 .LASF113
     /tmp/ccMdmw3p.s:2134   .debug_str:00000000000003b1 .LASF114
     /tmp/ccMdmw3p.s:2046   .debug_str:000000000000015f .LASF115
     /tmp/ccMdmw3p.s:2176   .debug_str:00000000000004ce .LASF116
     /tmp/ccMdmw3p.s:2248   .debug_str:0000000000000788 .LASF137
     /tmp/ccMdmw3p.s:2194   .debug_str:0000000000000556 .LASF125
     /tmp/ccMdmw3p.s:2096   .debug_str:00000000000002d3 .LASF127
     /tmp/ccMdmw3p.s:2056   .debug_str:00000000000001bf .LASF117
     /tmp/ccMdmw3p.s:2000   .debug_str:000000000000003b .LASF119
     /tmp/ccMdmw3p.s:2170   .debug_str:0000000000000482 .LASF118
     /tmp/ccMdmw3p.s:2058   .debug_str:00000000000001d2 .LASF120
     /tmp/ccMdmw3p.s:2218   .debug_str:0000000000000600 .LASF121
     /tmp/ccMdmw3p.s:2144   .debug_str:00000000000003e7 .LASF122
     /tmp/ccMdmw3p.s:2074   .debug_str:000000000000022a .LASF123
     /tmp/ccMdmw3p.s:2040   .debug_str:000000000000012e .LASF124
GAS LISTING /tmp/ccMdmw3p.s 			page 13


     /tmp/ccMdmw3p.s:2124   .debug_str:0000000000000371 .LASF126
     /tmp/ccMdmw3p.s:2178   .debug_str:00000000000004d8 .LASF128
     /tmp/ccMdmw3p.s:64     .text:0000000000000058 .LVL4
     /tmp/ccMdmw3p.s:78     .text:0000000000000060 .LVL5
     /tmp/ccMdmw3p.s:100    .text:0000000000000088 .LVL8
     /tmp/ccMdmw3p.s:107    .text:000000000000008c .LVL9
     /tmp/ccMdmw3p.s:122    .text:00000000000000a4 .LVL11
     /tmp/ccMdmw3p.s:167    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB7runningE
_ZN3TCB5startEv
_ZN5Riscv14supervisorTrapEv
_Z8userMainPv
_Z13thread_createPP3TCBPFvPvES2_
_Z12thread_startP3TCB
_Z15thread_dispatchv
_ZdaPv
_ZdlPv
