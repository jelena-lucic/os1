GAS LISTING /tmp/cc3y3T6B.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB42:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../h/tcb.hpp"
   3:src/riscv.cpp **** #include "../lib/console.h"
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** void Riscv::popSppSpie()
   6:src/riscv.cpp **** {
  12              		.loc 1 6 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   7:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 7 5
  21              		.loc 1 7 39 is_stmt 0
  22              	#APP
  23              	# 7 "src/riscv.cpp" 1
   8              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 8 5 is_stmt 1
  27              		.loc 1 8 30 is_stmt 0
  28              	# 8 "src/riscv.cpp" 1
   9              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 9 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 0A00     		.string	"\n"
  46              		.text
  47              		.align	2
  48              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  50              	_ZN5Riscv20handleSupervisorTrapEv:
  51              	.LFB43:
GAS LISTING /tmp/cc3y3T6B.s 			page 2


  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  52              		.loc 1 11 36 is_stmt 1
  53              		.cfi_startproc
  54 0020 130101F7 		addi	sp,sp,-144
  55              		.cfi_def_cfa_offset 144
  56 0024 23341108 		sd	ra,136(sp)
  57 0028 23308108 		sd	s0,128(sp)
  58 002c 233C9106 		sd	s1,120(sp)
  59 0030 23382107 		sd	s2,112(sp)
  60 0034 23343107 		sd	s3,104(sp)
  61              		.cfi_offset 1, -8
  62              		.cfi_offset 8, -16
  63              		.cfi_offset 9, -24
  64              		.cfi_offset 18, -32
  65              		.cfi_offset 19, -40
  66 0038 13040109 		addi	s0,sp,144
  67              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     uint64 a1 = r_a1();
  68              		.loc 1 12 5
  69              	.LBB52:
  70              	.LBB53:
  71              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  10:src/../h/riscv.hpp ****     static void popSppSpie();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // read register scause
  13:src/../h/riscv.hpp ****     static uint64 r_scause();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // write register scause
  16:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // read register sepc
  19:src/../h/riscv.hpp ****     static uint64 r_sepc();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // write register sepc
  22:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register stvec
  25:src/../h/riscv.hpp ****     static uint64 r_stvec();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register stvec
  28:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register stval
  31:src/../h/riscv.hpp ****     static uint64 r_stval();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register stval
  34:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
GAS LISTING /tmp/cc3y3T6B.s 			page 3


  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     enum BitMaskSip
  37:src/../h/riscv.hpp ****     {
  38:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  39:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  40:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  41:src/../h/riscv.hpp ****     };
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // mask set register sip
  44:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // mask clear register sip
  47:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // read register sip
  50:src/../h/riscv.hpp ****     static uint64 r_sip();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // write register sip
  53:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     enum BitMaskSstatus
  56:src/../h/riscv.hpp ****     {
  57:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  58:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  59:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  60:src/../h/riscv.hpp ****     };
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // mask set register sstatus
  63:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask clear register sstatus
  66:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // read register sstatus
  69:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // write register sstatus
  72:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     //read a0
  75:src/../h/riscv.hpp ****     static long r_a0();
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     //write a0
  78:src/../h/riscv.hpp ****     static void w_a0(long a0);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     //read a1
  81:src/../h/riscv.hpp ****     static uint64 r_a1();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     //write a1
  84:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     //read a2
  87:src/../h/riscv.hpp ****     static uint64 r_a2();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     //write a2
  90:src/../h/riscv.hpp ****     static void w_a2(uint64 a2);
  91:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc3y3T6B.s 			page 4


  92:src/../h/riscv.hpp ****     //read a3
  93:src/../h/riscv.hpp ****     static uint64 r_a3();
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     //write a3
  96:src/../h/riscv.hpp ****     static void w_a3(uint64 a3);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     //read a4
  99:src/../h/riscv.hpp ****     static uint64 r_a4();
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp ****     //write a3
 102:src/../h/riscv.hpp ****     static void w_a4(uint64 a4);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     // supervisor trap
 105:src/../h/riscv.hpp ****     static void supervisorTrap();
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** private:
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp ****     // supervisor trap handler
 110:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** };
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
 115:src/../h/riscv.hpp ****     uint64 volatile scause;
 116:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 117:src/../h/riscv.hpp ****     return scause;
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 125:src/../h/riscv.hpp ****     uint64 volatile sepc;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 127:src/../h/riscv.hpp ****     return sepc;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 135:src/../h/riscv.hpp ****     uint64 volatile stvec;
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 137:src/../h/riscv.hpp ****     return stvec;
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 145:src/../h/riscv.hpp ****     uint64 volatile stval;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 147:src/../h/riscv.hpp ****     return stval;
 148:src/../h/riscv.hpp **** }
GAS LISTING /tmp/cc3y3T6B.s 			page 5


 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 151:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 152:src/../h/riscv.hpp **** }
 153:src/../h/riscv.hpp **** 
 154:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 163:src/../h/riscv.hpp ****     uint64 volatile sip;
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 165:src/../h/riscv.hpp ****     return sip;
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 169:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 173:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 174:src/../h/riscv.hpp **** }
 175:src/../h/riscv.hpp **** 
 176:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 181:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 182:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 183:src/../h/riscv.hpp ****     return sstatus;
 184:src/../h/riscv.hpp **** }
 185:src/../h/riscv.hpp **** 
 186:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 188:src/../h/riscv.hpp **** }
 189:src/../h/riscv.hpp **** 
 190:src/../h/riscv.hpp **** inline void Riscv::w_a0(long a0) {
 191:src/../h/riscv.hpp ****     __asm__ volatile ("mv a0, %0" : : "r"(a0));
 192:src/../h/riscv.hpp **** }
 193:src/../h/riscv.hpp **** 
 194:src/../h/riscv.hpp **** inline long Riscv::r_a0() {
 195:src/../h/riscv.hpp ****     long volatile a0;
 196:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
 197:src/../h/riscv.hpp ****     return a0;
 198:src/../h/riscv.hpp **** }
 199:src/../h/riscv.hpp **** 
 200:src/../h/riscv.hpp **** inline void Riscv::w_a1(uint64 a1) {
 201:src/../h/riscv.hpp ****     __asm__ volatile ("mv a1, %0" : : "r"(a1));
 202:src/../h/riscv.hpp **** }
 203:src/../h/riscv.hpp **** 
 204:src/../h/riscv.hpp **** inline uint64 Riscv::r_a1() {
 205:src/../h/riscv.hpp ****     uint64 volatile a1;
GAS LISTING /tmp/cc3y3T6B.s 			page 6


  72              		.loc 2 205 5
 206:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 11*8(fp)" : "=r"(a1));
  73              		.loc 2 206 5
  74              		.loc 2 206 52 is_stmt 0
  75              	#APP
  76              	# 206 "src/../h/riscv.hpp" 1
 207              	    return a1;
  77              		ld a5, 11*8(fp)
  78              	# 0 "" 2
  79              	#NO_APP
  80 0040 2330F4FA 		sd	a5,-96(s0)
  81              		.loc 2 207 5 is_stmt 1
  82              		.loc 2 207 12 is_stmt 0
  83 0044 033604FA 		ld	a2,-96(s0)
  84              	.LVL0:
  85              	.LBE53:
  86              	.LBE52:
  13:src/riscv.cpp ****     uint64 a2 = r_a2();
  87              		.loc 1 13 5 is_stmt 1
  88              	.LBB54:
  89              	.LBB55:
 208:src/../h/riscv.hpp **** }
 209:src/../h/riscv.hpp **** 
 210:src/../h/riscv.hpp **** inline void Riscv::w_a2(uint64 a2) {
 211:src/../h/riscv.hpp ****     __asm__ volatile ("mv a2, %0" : : "r"(a2));
 212:src/../h/riscv.hpp **** }
 213:src/../h/riscv.hpp **** 
 214:src/../h/riscv.hpp **** inline uint64 Riscv::r_a2() {
 215:src/../h/riscv.hpp ****     uint64 volatile a2;
  90              		.loc 2 215 5
 216:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 12*8(fp)" : "=r"(a2));
  91              		.loc 2 216 5
  92              		.loc 2 216 52 is_stmt 0
  93              	#APP
  94              	# 216 "src/../h/riscv.hpp" 1
 217              	    return a2;
  95              		ld a5, 12*8(fp)
  96              	# 0 "" 2
  97              	#NO_APP
  98 004c 233CF4F8 		sd	a5,-104(s0)
  99              		.loc 2 217 5 is_stmt 1
 100              		.loc 2 217 12 is_stmt 0
 101 0050 833584F9 		ld	a1,-104(s0)
 102              	.LVL1:
 103              	.LBE55:
 104              	.LBE54:
  14:src/riscv.cpp ****     uint64 a3 = r_a3();
 105              		.loc 1 14 5 is_stmt 1
 106              	.LBB56:
 107              	.LBB57:
 218:src/../h/riscv.hpp **** }
 219:src/../h/riscv.hpp **** 
 220:src/../h/riscv.hpp **** inline void Riscv::w_a3(uint64 a3) {
 221:src/../h/riscv.hpp ****     __asm__ volatile ("mv a3, %0" : : "r"(a3));
 222:src/../h/riscv.hpp **** }
 223:src/../h/riscv.hpp **** 
 224:src/../h/riscv.hpp **** inline uint64 Riscv::r_a3() {
GAS LISTING /tmp/cc3y3T6B.s 			page 7


 225:src/../h/riscv.hpp ****     uint64 volatile a3;
 108              		.loc 2 225 5
 226:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 13*8(fp)" : "=r"(a3));
 109              		.loc 2 226 5
 110              		.loc 2 226 52 is_stmt 0
 111              	#APP
 112              	# 226 "src/../h/riscv.hpp" 1
 227              	    return a3;
 113              		ld a5, 13*8(fp)
 114              	# 0 "" 2
 115              	#NO_APP
 116 0058 2338F4F8 		sd	a5,-112(s0)
 117              		.loc 2 227 5 is_stmt 1
 118              		.loc 2 227 12 is_stmt 0
 119 005c 033504F9 		ld	a0,-112(s0)
 120              	.LVL2:
 121              	.LBE57:
 122              	.LBE56:
  15:src/riscv.cpp ****     uint64 a4 = r_a4();
 123              		.loc 1 15 5 is_stmt 1
 124              	.LBB58:
 125              	.LBB59:
 228:src/../h/riscv.hpp **** }
 229:src/../h/riscv.hpp **** 
 230:src/../h/riscv.hpp **** inline void Riscv::w_a4(uint64 a4) {
 231:src/../h/riscv.hpp ****     __asm__ volatile ("mv a4, %0" : : "r"(a4));
 232:src/../h/riscv.hpp **** }
 233:src/../h/riscv.hpp **** 
 234:src/../h/riscv.hpp **** inline uint64 Riscv::r_a4() {
 235:src/../h/riscv.hpp ****     uint64 volatile a4;
 126              		.loc 2 235 5
 236:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 14*8(fp)" : "=r"(a4));
 127              		.loc 2 236 5
 128              		.loc 2 236 52 is_stmt 0
 129              	#APP
 130              	# 236 "src/../h/riscv.hpp" 1
 237              	    return a4;
 131              		ld a5, 14*8(fp)
 132              	# 0 "" 2
 133              	#NO_APP
 134 0064 2334F4F8 		sd	a5,-120(s0)
 135              		.loc 2 237 5 is_stmt 1
 136              		.loc 2 237 12 is_stmt 0
 137 0068 033984F8 		ld	s2,-120(s0)
 138              	.LVL3:
 139              	.LBE59:
 140              	.LBE58:
  16:src/riscv.cpp ****     long a0 = r_a0();
 141              		.loc 1 16 5 is_stmt 1
 142              	.LBB60:
 143              	.LBB61:
 195:src/../h/riscv.hpp ****     __asm__ volatile ("ld %0, 10*8(fp)" : "=r"(a0));
 144              		.loc 2 195 5
 196:src/../h/riscv.hpp ****     return a0;
 145              		.loc 2 196 5
 196:src/../h/riscv.hpp ****     return a0;
 146              		.loc 2 196 52 is_stmt 0
GAS LISTING /tmp/cc3y3T6B.s 			page 8


 147              	#APP
 148              	# 196 "src/../h/riscv.hpp" 1
 149              		ld a5, 10*8(fp)
 150              	# 0 "" 2
 151              	#NO_APP
 152 0070 2330F4F8 		sd	a5,-128(s0)
 197:src/../h/riscv.hpp **** }
 153              		.loc 2 197 5 is_stmt 1
 197:src/../h/riscv.hpp **** }
 154              		.loc 2 197 12 is_stmt 0
 155 0074 033804F8 		ld	a6,-128(s0)
 156              	.LVL4:
 157              	.LBE61:
 158              	.LBE60:
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     uint64 scause = r_scause();
 159              		.loc 1 18 5 is_stmt 1
 160              	.LBB62:
 161              	.LBB63:
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 162              		.loc 2 115 5
 116:src/../h/riscv.hpp ****     return scause;
 163              		.loc 2 116 5
 116:src/../h/riscv.hpp ****     return scause;
 164              		.loc 2 116 72 is_stmt 0
 165              	#APP
 166              	# 116 "src/../h/riscv.hpp" 1
 167              		csrr a5, scause
 168              	# 0 "" 2
 169              	#NO_APP
 170 007c 233CF4F6 		sd	a5,-136(s0)
 117:src/../h/riscv.hpp **** }
 171              		.loc 2 117 5 is_stmt 1
 117:src/../h/riscv.hpp **** }
 172              		.loc 2 117 12 is_stmt 0
 173 0080 033784F7 		ld	a4,-136(s0)
 174              	.LVL5:
 175              	.LBE63:
 176              	.LBE62:
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL) {
 177              		.loc 1 20 5 is_stmt 1
 178              	.LBB64:
 179              		.loc 1 20 40 is_stmt 0
 180 0084 930687FF 		addi	a3,a4,-8
 181              		.loc 1 20 5
 182 0088 93071000 		li	a5,1
 183 008c 63FED706 		bleu	a3,a5,.L14
 184              	.LBE64:
  21:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // jer pc pokazuje na trenutnu instrukciju tj ecall a treba na 
  24:src/riscv.cpp ****         uint64 sstatus = r_sstatus(); // cuva vrednost statusnog registra
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****         if(a0 == 0x11) { //thread_create
  27:src/riscv.cpp ****             TCB *handle = TCB::createThread((void (*)(void*))(a3), (void*)a2, (uint64*)a1);
  28:src/riscv.cpp **** 
GAS LISTING /tmp/cc3y3T6B.s 			page 9


  29:src/riscv.cpp ****             if(!handle) w_a0(-1);
  30:src/riscv.cpp ****             else {
  31:src/riscv.cpp ****                 TCB** h = (TCB**)a4;
  32:src/riscv.cpp ****                 *(h) = handle;
  33:src/riscv.cpp ****                 w_a0(0);
  34:src/riscv.cpp ****             }
  35:src/riscv.cpp ****         }
  36:src/riscv.cpp ****         else if(a0 == 0x12) { // thread_exit
  37:src/riscv.cpp ****             a0 = TCB::exit();
  38:src/riscv.cpp ****             w_a0(a0);
  39:src/riscv.cpp ****         }
  40:src/riscv.cpp ****         else if(a0 == 0x13) { // thread_dispatch
  41:src/riscv.cpp ****             TCB::dispatch();
  42:src/riscv.cpp ****         }
  43:src/riscv.cpp **** 
  44:src/riscv.cpp ****         w_sstatus(sstatus); // restauracija statusnog registra
  45:src/riscv.cpp ****         w_sepc(sepc); // restauracija pc registra
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 185              		.loc 1 47 12 is_stmt 1
 186              	.LBB106:
 187              	.LBB65:
 188 0090 9307F0FF 		li	a5,-1
 189 0094 9397F703 		slli	a5,a5,63
 190 0098 93871700 		addi	a5,a5,1
 191 009c 6304F710 		beq	a4,a5,.L15
  48:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  49:src/riscv.cpp ****         TCB::timeSliceCounter++;
  50:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  51:src/riscv.cpp ****         {
  52:src/riscv.cpp ****             uint64 sepc = r_sepc();
  53:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
  54:src/riscv.cpp **** 
  55:src/riscv.cpp ****             TCB::dispatch();
  56:src/riscv.cpp **** 
  57:src/riscv.cpp ****             w_sstatus(sstatus);
  58:src/riscv.cpp ****             w_sepc(sepc);
  59:src/riscv.cpp ****         }
  60:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  61:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 192              		.loc 1 61 12
 193 00a0 9307F0FF 		li	a5,-1
 194 00a4 9397F703 		slli	a5,a5,63
 195 00a8 93879700 		addi	a5,a5,9
 196 00ac 630CF714 		beq	a4,a5,.L16
  62:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  63:src/riscv.cpp ****         console_handler();
  64:src/riscv.cpp ****     } else {
  65:src/riscv.cpp ****         // unexpected trap cause
  66:src/riscv.cpp ****         printInt(scause);
 197              		.loc 1 66 9
 198              		.loc 1 66 17 is_stmt 0
 199 00b0 13060000 		li	a2,0
 200              	.LVL6:
 201 00b4 9305A000 		li	a1,10
 202              	.LVL7:
 203 00b8 1B050700 		sext.w	a0,a4
GAS LISTING /tmp/cc3y3T6B.s 			page 10


 204              	.LVL8:
 205 00bc 97000000 		call	_Z8printIntiii@plt
 205      E7800000 
 206              	.LVL9:
  67:src/riscv.cpp ****         printString("\n");
 207              		.loc 1 67 9 is_stmt 1
 208              		.loc 1 67 20 is_stmt 0
 209 00c4 17050000 		lla	a0,.LC0
 209      13050500 
 210 00cc 97000000 		call	_Z11printStringPKc@plt
 210      E7800000 
 211              	.LVL10:
  68:src/riscv.cpp ****         printInt(r_sepc());
 212              		.loc 1 68 9 is_stmt 1
 213              	.LBB66:
 214              	.LBB67:
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 215              		.loc 2 125 5
 126:src/../h/riscv.hpp ****     return sepc;
 216              		.loc 2 126 5
 126:src/../h/riscv.hpp ****     return sepc;
 217              		.loc 2 126 64 is_stmt 0
 218              	#APP
 219              	# 126 "src/../h/riscv.hpp" 1
 220              		csrr a5, sepc
 221              	# 0 "" 2
 222              	#NO_APP
 223 00d8 2334F4FC 		sd	a5,-56(s0)
 127:src/../h/riscv.hpp **** }
 224              		.loc 2 127 5 is_stmt 1
 127:src/../h/riscv.hpp **** }
 225              		.loc 2 127 12 is_stmt 0
 226 00dc 033584FC 		ld	a0,-56(s0)
 227              	.LBE67:
 228              	.LBE66:
 229              		.loc 1 68 17
 230 00e0 13060000 		li	a2,0
 231 00e4 9305A000 		li	a1,10
 232 00e8 1B050500 		sext.w	a0,a0
 233 00ec 97000000 		call	_Z8printIntiii@plt
 233      E7800000 
 234              	.LVL11:
  69:src/riscv.cpp ****         printString("\n");
 235              		.loc 1 69 9 is_stmt 1
 236              		.loc 1 69 20 is_stmt 0
 237 00f4 17050000 		lla	a0,.LC0
 237      13050500 
 238 00fc 97000000 		call	_Z11printStringPKc@plt
 238      E7800000 
 239              	.LVL12:
 240              	.LBE65:
 241              	.LBE106:
  70:src/riscv.cpp ****     }
  71:src/riscv.cpp **** }...
 242              		.loc 1 71 1
 243 0104 6F000004 		j	.L3
 244              	.LVL13:
GAS LISTING /tmp/cc3y3T6B.s 			page 11


 245              	.L14:
 246              	.LBB107:
 247              	.LBB84:
  23:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // jer pc pokazuje na trenutnu instrukciju tj ecall a treba na 
 248              		.loc 1 23 9 is_stmt 1
 249              	.LBB85:
 250              	.LBB86:
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 251              		.loc 2 125 5
 126:src/../h/riscv.hpp ****     return sepc;
 252              		.loc 2 126 5
 126:src/../h/riscv.hpp ****     return sepc;
 253              		.loc 2 126 64 is_stmt 0
 254              	#APP
 255              	# 126 "src/../h/riscv.hpp" 1
 256              		csrr a5, sepc
 257              	# 0 "" 2
 258              	#NO_APP
 259 010c 2338F4FA 		sd	a5,-80(s0)
 127:src/../h/riscv.hpp **** }
 260              		.loc 2 127 5 is_stmt 1
 127:src/../h/riscv.hpp **** }
 261              		.loc 2 127 12 is_stmt 0
 262 0110 833404FB 		ld	s1,-80(s0)
 263              	.LBE86:
 264              	.LBE85:
  23:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; // jer pc pokazuje na trenutnu instrukciju tj ecall a treba na 
 265              		.loc 1 23 34
 266 0114 93844400 		addi	s1,s1,4
 267              	.LVL14:
  24:src/riscv.cpp ****         uint64 sstatus = r_sstatus(); // cuva vrednost statusnog registra
 268              		.loc 1 24 9 is_stmt 1
 269              	.LBB87:
 270              	.LBB88:
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 271              		.loc 2 181 5
 182:src/../h/riscv.hpp ****     return sstatus;
 272              		.loc 2 182 5
 182:src/../h/riscv.hpp ****     return sstatus;
 273              		.loc 2 182 76 is_stmt 0
 274              	#APP
 275              	# 182 "src/../h/riscv.hpp" 1
 276              		csrr a5, sstatus
 277              	# 0 "" 2
 278              	#NO_APP
 279 011c 2334F4FA 		sd	a5,-88(s0)
 183:src/../h/riscv.hpp **** }
 280              		.loc 2 183 5 is_stmt 1
 183:src/../h/riscv.hpp **** }
 281              		.loc 2 183 12 is_stmt 0
 282 0120 833984FA 		ld	s3,-88(s0)
 283              	.LVL15:
 284              	.LBE88:
 285              	.LBE87:
  26:src/riscv.cpp ****         if(a0 == 0x11) { //thread_create
 286              		.loc 1 26 9 is_stmt 1
 287              	.LBB89:
GAS LISTING /tmp/cc3y3T6B.s 			page 12


 288 0124 93071001 		li	a5,17
 289 0128 630CF802 		beq	a6,a5,.L17
  36:src/riscv.cpp ****         else if(a0 == 0x12) { // thread_exit
 290              		.loc 1 36 14
 291 012c 93072001 		li	a5,18
 292 0130 630CF804 		beq	a6,a5,.L18
  40:src/riscv.cpp ****         else if(a0 == 0x13) { // thread_dispatch
 293              		.loc 1 40 14
 294 0134 93073001 		li	a5,19
 295 0138 6300F806 		beq	a6,a5,.L19
 296              	.LVL16:
 297              	.L7:
 298              	.LBE89:
  44:src/riscv.cpp ****         w_sstatus(sstatus); // restauracija statusnog registra
 299              		.loc 1 44 9
 300              	.LBB99:
 301              	.LBB100:
 187:src/../h/riscv.hpp **** }
 302              		.loc 2 187 5
 187:src/../h/riscv.hpp **** }
 303              		.loc 2 187 77 is_stmt 0
 304              	#APP
 305              	# 187 "src/../h/riscv.hpp" 1
 306              		csrw sstatus, s3
 307              	# 0 "" 2
 308              	.LVL17:
 309              	#NO_APP
 310              	.LBE100:
 311              	.LBE99:
  45:src/riscv.cpp ****         w_sepc(sepc); // restauracija pc registra
 312              		.loc 1 45 9 is_stmt 1
 313              	.LBB101:
 314              	.LBB102:
 131:src/../h/riscv.hpp **** }
 315              		.loc 2 131 5
 131:src/../h/riscv.hpp **** }
 316              		.loc 2 131 65 is_stmt 0
 317              	#APP
 318              	# 131 "src/../h/riscv.hpp" 1
 319              		csrw sepc, s1
 320              	# 0 "" 2
 321              	.LVL18:
 322              	#NO_APP
 323              	.L3:
 324              	.LBE102:
 325              	.LBE101:
 326              	.LBE84:
 327              	.LBE107:
 328              		.loc 1 71 1
 329 0144 83308108 		ld	ra,136(sp)
 330              		.cfi_remember_state
 331              		.cfi_restore 1
 332 0148 03340108 		ld	s0,128(sp)
 333              		.cfi_restore 8
 334              		.cfi_def_cfa 2, 144
 335 014c 83348107 		ld	s1,120(sp)
 336              		.cfi_restore 9
GAS LISTING /tmp/cc3y3T6B.s 			page 13


 337 0150 03390107 		ld	s2,112(sp)
 338              		.cfi_restore 18
 339 0154 83398106 		ld	s3,104(sp)
 340              		.cfi_restore 19
 341 0158 13010109 		addi	sp,sp,144
 342              		.cfi_def_cfa_offset 0
 343 015c 67800000 		jr	ra
 344              	.LVL19:
 345              	.L17:
 346              		.cfi_restore_state
 347              	.LBB108:
 348              	.LBB104:
 349              	.LBB103:
 350              	.LBB90:
  27:src/riscv.cpp ****             TCB *handle = TCB::createThread((void (*)(void*))(a3), (void*)a2, (uint64*)a1);
 351              		.loc 1 27 13 is_stmt 1
  27:src/riscv.cpp ****             TCB *handle = TCB::createThread((void (*)(void*))(a3), (void*)a2, (uint64*)a1);
 352              		.loc 1 27 44 is_stmt 0
 353 0160 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 353      E7800000 
 354              	.LVL20:
  29:src/riscv.cpp ****             if(!handle) w_a0(-1);
 355              		.loc 1 29 13 is_stmt 1
 356              	.LBB91:
 357 0168 630A0500 		beqz	a0,.L20
 358              	.LBB92:
  31:src/riscv.cpp ****                 TCB** h = (TCB**)a4;
 359              		.loc 1 31 17
 360              	.LVL21:
  32:src/riscv.cpp ****                 *(h) = handle;
 361              		.loc 1 32 17
  32:src/riscv.cpp ****                 *(h) = handle;
 362              		.loc 1 32 22 is_stmt 0
 363 016c 2330A900 		sd	a0,0(s2)
  33:src/riscv.cpp ****                 w_a0(0);
 364              		.loc 1 33 17 is_stmt 1
 365              	.LVL22:
 366              	.LBB93:
 367              	.LBB94:
 191:src/../h/riscv.hpp **** }
 368              		.loc 2 191 5
 191:src/../h/riscv.hpp **** }
 369              		.loc 2 191 47 is_stmt 0
 370 0170 93070000 		li	a5,0
 371              	#APP
 372              	# 191 "src/../h/riscv.hpp" 1
 192:src/../h/riscv.hpp **** 
 373              		mv a0, a5
 374              	# 0 "" 2
 375              		.loc 2 192 1
 376              	#NO_APP
 377 0178 6FF05FFC 		j	.L7
 378              	.LVL23:
 379              	.L20:
 380              	.LBE94:
 381              	.LBE93:
 382              	.LBE92:
GAS LISTING /tmp/cc3y3T6B.s 			page 14


  29:src/riscv.cpp ****             if(!handle) w_a0(-1);
 383              		.loc 1 29 25 is_stmt 1
 384              	.LBB95:
 385              	.LBB96:
 191:src/../h/riscv.hpp **** }
 386              		.loc 2 191 5
 191:src/../h/riscv.hpp **** }
 387              		.loc 2 191 47 is_stmt 0
 388 017c 9307F0FF 		li	a5,-1
 389              	#APP
 390              	# 191 "src/../h/riscv.hpp" 1
 192:src/../h/riscv.hpp **** 
 391              		mv a0, a5
 392              	# 0 "" 2
 393              		.loc 2 192 1
 394              	#NO_APP
 395 0184 6FF09FFB 		j	.L7
 396              	.LVL24:
 397              	.L18:
 398              	.LBE96:
 399              	.LBE95:
 400              	.LBE91:
 401              	.LBE90:
  37:src/riscv.cpp ****             a0 = TCB::exit();
 402              		.loc 1 37 13 is_stmt 1
  37:src/riscv.cpp ****             a0 = TCB::exit();
 403              		.loc 1 37 27 is_stmt 0
 404 0188 97000000 		call	_ZN3TCB4exitEv@plt
 404      E7800000 
 405              	.LVL25:
  38:src/riscv.cpp ****             w_a0(a0);
 406              		.loc 1 38 13 is_stmt 1
 407              	.LBB97:
 408              	.LBB98:
 191:src/../h/riscv.hpp **** }
 409              		.loc 2 191 5
 191:src/../h/riscv.hpp **** }
 410              		.loc 2 191 47 is_stmt 0
 411              	#APP
 412              	# 191 "src/../h/riscv.hpp" 1
 192:src/../h/riscv.hpp **** 
 413              		mv a0, a0
 414              	# 0 "" 2
 415              		.loc 2 192 1
 416              	#NO_APP
 417 0194 6FF09FFA 		j	.L7
 418              	.LVL26:
 419              	.L19:
 420              	.LBE98:
 421              	.LBE97:
  41:src/riscv.cpp ****             TCB::dispatch();
 422              		.loc 1 41 13 is_stmt 1
  41:src/riscv.cpp ****             TCB::dispatch();
 423              		.loc 1 41 26 is_stmt 0
 424 0198 97000000 		call	_ZN3TCB8dispatchEv@plt
 424      E7800000 
 425              	.LVL27:
GAS LISTING /tmp/cc3y3T6B.s 			page 15


 426 01a0 6FF0DFF9 		j	.L7
 427              	.LVL28:
 428              	.L15:
 429              	.LBE103:
 430              	.LBE104:
 431              	.LBB105:
 432              	.LBB68:
  49:src/riscv.cpp ****         TCB::timeSliceCounter++;
 433              		.loc 1 49 9 is_stmt 1
  49:src/riscv.cpp ****         TCB::timeSliceCounter++;
 434              		.loc 1 49 30 is_stmt 0
 435 01a4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 435      03370700 
 436              	.LVL29:
 437 01ac 83370700 		ld	a5,0(a4)
 438 01b0 93871700 		addi	a5,a5,1
 439 01b4 2330F700 		sd	a5,0(a4)
  50:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 440              		.loc 1 50 9 is_stmt 1
 441              	.LBB69:
  50:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 442              		.loc 1 50 64 is_stmt 0
 443 01b8 17070000 		la	a4,_ZN3TCB7runningE
 443      03370700 
 444 01c0 03370700 		ld	a4,0(a4)
 445              	.LVL30:
 446              	.LBB70:
 447              	.LBB71:
 448              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_HPP
   2:src/../h/tcb.hpp **** #define TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** #include "../test/printing.hpp"
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** // Thread Control Block
   9:src/../h/tcb.hpp **** class TCB
  10:src/../h/tcb.hpp **** {
  11:src/../h/tcb.hpp **** public:
  12:src/../h/tcb.hpp ****     enum State {CREATED, READY, RUNNING, FINISHED};
  13:src/../h/tcb.hpp **** 
  14:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp ****     bool isFinished() const { return this->state == FINISHED; }
  17:src/../h/tcb.hpp **** 
  18:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 449              		.loc 3 18 35 is_stmt 1
 450              		.loc 3 18 42 is_stmt 0
 451 01c4 03370703 		ld	a4,48(a4)
 452              	.LVL31:
 453              	.LBE71:
 454              	.LBE70:
  50:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 455              		.loc 1 50 9
 456 01c8 63F8E700 		bgeu	a5,a4,.L21
 457              	.LVL32:
GAS LISTING /tmp/cc3y3T6B.s 			page 16


 458              	.L11:
 459              	.LBE69:
  60:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 460              		.loc 1 60 9 is_stmt 1
 461              	.LBB81:
 462              	.LBB82:
 159:src/../h/riscv.hpp **** }
 463              		.loc 2 159 5
 159:src/../h/riscv.hpp **** }
 464              		.loc 2 159 64 is_stmt 0
 465 01cc 93072000 		li	a5,2
 466              	#APP
 467              	# 159 "src/../h/riscv.hpp" 1
 160:src/../h/riscv.hpp **** 
 468              		csrc sip, a5
 469              	# 0 "" 2
 470              		.loc 2 160 1
 471              	#NO_APP
 472 01d4 6FF01FF7 		j	.L3
 473              	.LVL33:
 474              	.L21:
 475              	.LBE82:
 476              	.LBE81:
 477              	.LBB83:
 478              	.LBB72:
  52:src/riscv.cpp ****             uint64 sepc = r_sepc();
 479              		.loc 1 52 13 is_stmt 1
 480              	.LBB73:
 481              	.LBB74:
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 482              		.loc 2 125 5
 126:src/../h/riscv.hpp ****     return sepc;
 483              		.loc 2 126 5
 126:src/../h/riscv.hpp ****     return sepc;
 484              		.loc 2 126 64 is_stmt 0
 485              	#APP
 486              	# 126 "src/../h/riscv.hpp" 1
 487              		csrr a5, sepc
 488              	# 0 "" 2
 489              	#NO_APP
 490 01dc 2330F4FC 		sd	a5,-64(s0)
 127:src/../h/riscv.hpp **** }
 491              		.loc 2 127 5 is_stmt 1
 127:src/../h/riscv.hpp **** }
 492              		.loc 2 127 12 is_stmt 0
 493 01e0 833404FC 		ld	s1,-64(s0)
 494              	.LVL34:
 495              	.LBE74:
 496              	.LBE73:
  53:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
 497              		.loc 1 53 13 is_stmt 1
 498              	.LBB75:
 499              	.LBB76:
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 500              		.loc 2 181 5
 182:src/../h/riscv.hpp ****     return sstatus;
 501              		.loc 2 182 5
GAS LISTING /tmp/cc3y3T6B.s 			page 17


 182:src/../h/riscv.hpp ****     return sstatus;
 502              		.loc 2 182 76 is_stmt 0
 503              	#APP
 504              	# 182 "src/../h/riscv.hpp" 1
 505              		csrr a5, sstatus
 506              	# 0 "" 2
 507              	#NO_APP
 508 01e8 233CF4FA 		sd	a5,-72(s0)
 183:src/../h/riscv.hpp **** }
 509              		.loc 2 183 5 is_stmt 1
 183:src/../h/riscv.hpp **** }
 510              		.loc 2 183 12 is_stmt 0
 511 01ec 033984FB 		ld	s2,-72(s0)
 512              	.LVL35:
 513              	.LBE76:
 514              	.LBE75:
  55:src/riscv.cpp ****             TCB::dispatch();
 515              		.loc 1 55 13 is_stmt 1
  55:src/riscv.cpp ****             TCB::dispatch();
 516              		.loc 1 55 26 is_stmt 0
 517 01f0 97000000 		call	_ZN3TCB8dispatchEv@plt
 517      E7800000 
 518              	.LVL36:
  57:src/riscv.cpp ****             w_sstatus(sstatus);
 519              		.loc 1 57 13 is_stmt 1
 520              	.LBB77:
 521              	.LBB78:
 187:src/../h/riscv.hpp **** }
 522              		.loc 2 187 5
 187:src/../h/riscv.hpp **** }
 523              		.loc 2 187 77 is_stmt 0
 524              	#APP
 525              	# 187 "src/../h/riscv.hpp" 1
 526              		csrw sstatus, s2
 527              	# 0 "" 2
 528              	.LVL37:
 529              	#NO_APP
 530              	.LBE78:
 531              	.LBE77:
  58:src/riscv.cpp ****             w_sepc(sepc);
 532              		.loc 1 58 13 is_stmt 1
 533              	.LBB79:
 534              	.LBB80:
 131:src/../h/riscv.hpp **** }
 535              		.loc 2 131 5
 131:src/../h/riscv.hpp **** }
 536              		.loc 2 131 65 is_stmt 0
 537              	#APP
 538              	# 131 "src/../h/riscv.hpp" 1
 132:src/../h/riscv.hpp **** 
 539              		csrw sepc, s1
 540              	# 0 "" 2
 541              		.loc 2 132 1
 542              	#NO_APP
 543 0200 6FF0DFFC 		j	.L11
 544              	.LVL38:
 545              	.L16:
GAS LISTING /tmp/cc3y3T6B.s 			page 18


 546              	.LBE80:
 547              	.LBE79:
 548              	.LBE72:
 549              	.LBE83:
 550              	.LBE68:
  63:src/riscv.cpp ****         console_handler();
 551              		.loc 1 63 9 is_stmt 1
  63:src/riscv.cpp ****         console_handler();
 552              		.loc 1 63 24 is_stmt 0
 553 0204 97000000 		call	console_handler@plt
 553      E7800000 
 554              	.LVL39:
 555 020c 6FF09FF3 		j	.L3
 556              	.LBE105:
 557              	.LBE108:
 558              		.cfi_endproc
 559              	.LFE43:
 561              	.Letext0:
 562              		.file 4 "src/../h/../lib/hw.h"
 563              		.file 5 "src/../h/../test/printing.hpp"
 564              		.file 6 "src/../lib/console.h"
GAS LISTING /tmp/cc3y3T6B.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cc3y3T6B.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cc3y3T6B.s:13     .text:0000000000000000 .L0 
     /tmp/cc3y3T6B.s:14     .text:0000000000000000 .L0 
     /tmp/cc3y3T6B.s:15     .text:0000000000000004 .L0 
     /tmp/cc3y3T6B.s:17     .text:0000000000000008 .L0 
     /tmp/cc3y3T6B.s:19     .text:000000000000000c .L0 
     /tmp/cc3y3T6B.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:7      .text:000000000000000c .L0 
     /tmp/cc3y3T6B.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:8      .text:0000000000000010 .L0 
     /tmp/cc3y3T6B.s:33     .text:0000000000000014 .L0 
     /tmp/cc3y3T6B.s:34     .text:0000000000000018 .L0 
     /tmp/cc3y3T6B.s:35     .text:0000000000000018 .L0 
     /tmp/cc3y3T6B.s:37     .text:000000000000001c .L0 
     /tmp/cc3y3T6B.s:39     .text:0000000000000020 .L0 
     /tmp/cc3y3T6B.s:50     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3y3T6B.s:53     .text:0000000000000020 .L0 
     /tmp/cc3y3T6B.s:54     .text:0000000000000020 .L0 
     /tmp/cc3y3T6B.s:55     .text:0000000000000024 .L0 
     /tmp/cc3y3T6B.s:61     .text:0000000000000038 .L0 
     /tmp/cc3y3T6B.s:62     .text:0000000000000038 .L0 
     /tmp/cc3y3T6B.s:63     .text:0000000000000038 .L0 
     /tmp/cc3y3T6B.s:64     .text:0000000000000038 .L0 
     /tmp/cc3y3T6B.s:65     .text:0000000000000038 .L0 
     /tmp/cc3y3T6B.s:67     .text:000000000000003c .L0 
     /tmp/cc3y3T6B.s:72     .text:000000000000003c .L0 
     /tmp/cc3y3T6B.s:73     .text:000000000000003c .L0 
     /tmp/cc3y3T6B.s:74     .text:000000000000003c .L0 
  src/../h/riscv.hpp:206    .text:000000000000003c .L0 
     /tmp/cc3y3T6B.s:82     .text:0000000000000044 .L0 
     /tmp/cc3y3T6B.s:83     .text:0000000000000044 .L0 
     /tmp/cc3y3T6B.s:90     .text:0000000000000048 .L0 
     /tmp/cc3y3T6B.s:91     .text:0000000000000048 .L0 
     /tmp/cc3y3T6B.s:92     .text:0000000000000048 .L0 
  src/../h/riscv.hpp:216    .text:0000000000000048 .L0 
     /tmp/cc3y3T6B.s:100    .text:0000000000000050 .L0 
     /tmp/cc3y3T6B.s:101    .text:0000000000000050 .L0 
     /tmp/cc3y3T6B.s:108    .text:0000000000000054 .L0 
     /tmp/cc3y3T6B.s:109    .text:0000000000000054 .L0 
     /tmp/cc3y3T6B.s:110    .text:0000000000000054 .L0 
  src/../h/riscv.hpp:226    .text:0000000000000054 .L0 
     /tmp/cc3y3T6B.s:118    .text:000000000000005c .L0 
     /tmp/cc3y3T6B.s:119    .text:000000000000005c .L0 
     /tmp/cc3y3T6B.s:126    .text:0000000000000060 .L0 
     /tmp/cc3y3T6B.s:127    .text:0000000000000060 .L0 
     /tmp/cc3y3T6B.s:128    .text:0000000000000060 .L0 
  src/../h/riscv.hpp:236    .text:0000000000000060 .L0 
     /tmp/cc3y3T6B.s:136    .text:0000000000000068 .L0 
     /tmp/cc3y3T6B.s:137    .text:0000000000000068 .L0 
     /tmp/cc3y3T6B.s:144    .text:000000000000006c .L0 
     /tmp/cc3y3T6B.s:145    .text:000000000000006c .L0 
     /tmp/cc3y3T6B.s:146    .text:000000000000006c .L0 
  src/../h/riscv.hpp:196    .text:000000000000006c .L0 
     /tmp/cc3y3T6B.s:154    .text:0000000000000074 .L0 
     /tmp/cc3y3T6B.s:155    .text:0000000000000074 .L0 
GAS LISTING /tmp/cc3y3T6B.s 			page 20


     /tmp/cc3y3T6B.s:162    .text:0000000000000078 .L0 
     /tmp/cc3y3T6B.s:163    .text:0000000000000078 .L0 
     /tmp/cc3y3T6B.s:164    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:116    .text:0000000000000078 .L0 
     /tmp/cc3y3T6B.s:172    .text:0000000000000080 .L0 
     /tmp/cc3y3T6B.s:173    .text:0000000000000080 .L0 
     /tmp/cc3y3T6B.s:179    .text:0000000000000084 .L0 
     /tmp/cc3y3T6B.s:180    .text:0000000000000084 .L0 
     /tmp/cc3y3T6B.s:182    .text:0000000000000088 .L0 
     /tmp/cc3y3T6B.s:188    .text:0000000000000090 .L0 
     /tmp/cc3y3T6B.s:193    .text:00000000000000a0 .L0 
     /tmp/cc3y3T6B.s:198    .text:00000000000000b0 .L0 
     /tmp/cc3y3T6B.s:199    .text:00000000000000b0 .L0 
     /tmp/cc3y3T6B.s:208    .text:00000000000000c4 .L0 
     /tmp/cc3y3T6B.s:209    .text:00000000000000c4 .L0 
     /tmp/cc3y3T6B.s:215    .text:00000000000000d4 .L0 
     /tmp/cc3y3T6B.s:216    .text:00000000000000d4 .L0 
     /tmp/cc3y3T6B.s:217    .text:00000000000000d4 .L0 
  src/../h/riscv.hpp:126    .text:00000000000000d4 .L0 
     /tmp/cc3y3T6B.s:225    .text:00000000000000dc .L0 
     /tmp/cc3y3T6B.s:226    .text:00000000000000dc .L0 
     /tmp/cc3y3T6B.s:230    .text:00000000000000e0 .L0 
     /tmp/cc3y3T6B.s:236    .text:00000000000000f4 .L0 
     /tmp/cc3y3T6B.s:237    .text:00000000000000f4 .L0 
     /tmp/cc3y3T6B.s:243    .text:0000000000000104 .L0 
     /tmp/cc3y3T6B.s:251    .text:0000000000000108 .L0 
     /tmp/cc3y3T6B.s:252    .text:0000000000000108 .L0 
     /tmp/cc3y3T6B.s:253    .text:0000000000000108 .L0 
  src/../h/riscv.hpp:126    .text:0000000000000108 .L0 
     /tmp/cc3y3T6B.s:261    .text:0000000000000110 .L0 
     /tmp/cc3y3T6B.s:262    .text:0000000000000110 .L0 
     /tmp/cc3y3T6B.s:266    .text:0000000000000114 .L0 
     /tmp/cc3y3T6B.s:271    .text:0000000000000118 .L0 
     /tmp/cc3y3T6B.s:272    .text:0000000000000118 .L0 
     /tmp/cc3y3T6B.s:273    .text:0000000000000118 .L0 
  src/../h/riscv.hpp:182    .text:0000000000000118 .L0 
     /tmp/cc3y3T6B.s:281    .text:0000000000000120 .L0 
     /tmp/cc3y3T6B.s:282    .text:0000000000000120 .L0 
     /tmp/cc3y3T6B.s:288    .text:0000000000000124 .L0 
     /tmp/cc3y3T6B.s:291    .text:000000000000012c .L0 
     /tmp/cc3y3T6B.s:294    .text:0000000000000134 .L0 
     /tmp/cc3y3T6B.s:302    .text:000000000000013c .L0 
     /tmp/cc3y3T6B.s:303    .text:000000000000013c .L0 
  src/../h/riscv.hpp:187    .text:000000000000013c .L0 
     /tmp/cc3y3T6B.s:315    .text:0000000000000140 .L0 
     /tmp/cc3y3T6B.s:316    .text:0000000000000140 .L0 
  src/../h/riscv.hpp:131    .text:0000000000000140 .L0 
     /tmp/cc3y3T6B.s:329    .text:0000000000000144 .L0 
     /tmp/cc3y3T6B.s:330    .text:0000000000000148 .L0 
     /tmp/cc3y3T6B.s:331    .text:0000000000000148 .L0 
     /tmp/cc3y3T6B.s:333    .text:000000000000014c .L0 
     /tmp/cc3y3T6B.s:334    .text:000000000000014c .L0 
     /tmp/cc3y3T6B.s:336    .text:0000000000000150 .L0 
     /tmp/cc3y3T6B.s:338    .text:0000000000000154 .L0 
     /tmp/cc3y3T6B.s:340    .text:0000000000000158 .L0 
     /tmp/cc3y3T6B.s:342    .text:000000000000015c .L0 
     /tmp/cc3y3T6B.s:346    .text:0000000000000160 .L0 
GAS LISTING /tmp/cc3y3T6B.s 			page 21


     /tmp/cc3y3T6B.s:352    .text:0000000000000160 .L0 
     /tmp/cc3y3T6B.s:353    .text:0000000000000160 .L0 
     /tmp/cc3y3T6B.s:357    .text:0000000000000168 .L0 
     /tmp/cc3y3T6B.s:361    .text:000000000000016c .L0 
     /tmp/cc3y3T6B.s:362    .text:000000000000016c .L0 
     /tmp/cc3y3T6B.s:363    .text:000000000000016c .L0 
     /tmp/cc3y3T6B.s:368    .text:0000000000000170 .L0 
     /tmp/cc3y3T6B.s:369    .text:0000000000000170 .L0 
     /tmp/cc3y3T6B.s:370    .text:0000000000000170 .L0 
     /tmp/cc3y3T6B.s:377    .text:0000000000000178 .L0 
     /tmp/cc3y3T6B.s:386    .text:000000000000017c .L0 
     /tmp/cc3y3T6B.s:387    .text:000000000000017c .L0 
     /tmp/cc3y3T6B.s:388    .text:000000000000017c .L0 
     /tmp/cc3y3T6B.s:395    .text:0000000000000184 .L0 
     /tmp/cc3y3T6B.s:403    .text:0000000000000188 .L0 
     /tmp/cc3y3T6B.s:404    .text:0000000000000188 .L0 
     /tmp/cc3y3T6B.s:409    .text:0000000000000190 .L0 
     /tmp/cc3y3T6B.s:410    .text:0000000000000190 .L0 
  src/../h/riscv.hpp:191    .text:0000000000000190 .L0 
     /tmp/cc3y3T6B.s:417    .text:0000000000000194 .L0 
     /tmp/cc3y3T6B.s:423    .text:0000000000000198 .L0 
     /tmp/cc3y3T6B.s:424    .text:0000000000000198 .L0 
     /tmp/cc3y3T6B.s:434    .text:00000000000001a4 .L0 
     /tmp/cc3y3T6B.s:435    .text:00000000000001a4 .L0 
     /tmp/cc3y3T6B.s:442    .text:00000000000001b8 .L0 
     /tmp/cc3y3T6B.s:443    .text:00000000000001b8 .L0 
     /tmp/cc3y3T6B.s:450    .text:00000000000001c4 .L0 
     /tmp/cc3y3T6B.s:451    .text:00000000000001c4 .L0 
     /tmp/cc3y3T6B.s:456    .text:00000000000001c8 .L0 
     /tmp/cc3y3T6B.s:463    .text:00000000000001cc .L0 
     /tmp/cc3y3T6B.s:464    .text:00000000000001cc .L0 
     /tmp/cc3y3T6B.s:465    .text:00000000000001cc .L0 
     /tmp/cc3y3T6B.s:472    .text:00000000000001d4 .L0 
     /tmp/cc3y3T6B.s:482    .text:00000000000001d8 .L0 
     /tmp/cc3y3T6B.s:483    .text:00000000000001d8 .L0 
     /tmp/cc3y3T6B.s:484    .text:00000000000001d8 .L0 
  src/../h/riscv.hpp:126    .text:00000000000001d8 .L0 
     /tmp/cc3y3T6B.s:492    .text:00000000000001e0 .L0 
     /tmp/cc3y3T6B.s:493    .text:00000000000001e0 .L0 
     /tmp/cc3y3T6B.s:500    .text:00000000000001e4 .L0 
     /tmp/cc3y3T6B.s:501    .text:00000000000001e4 .L0 
     /tmp/cc3y3T6B.s:502    .text:00000000000001e4 .L0 
  src/../h/riscv.hpp:182    .text:00000000000001e4 .L0 
     /tmp/cc3y3T6B.s:510    .text:00000000000001ec .L0 
     /tmp/cc3y3T6B.s:511    .text:00000000000001ec .L0 
     /tmp/cc3y3T6B.s:516    .text:00000000000001f0 .L0 
     /tmp/cc3y3T6B.s:517    .text:00000000000001f0 .L0 
     /tmp/cc3y3T6B.s:522    .text:00000000000001f8 .L0 
     /tmp/cc3y3T6B.s:523    .text:00000000000001f8 .L0 
  src/../h/riscv.hpp:187    .text:00000000000001f8 .L0 
     /tmp/cc3y3T6B.s:535    .text:00000000000001fc .L0 
     /tmp/cc3y3T6B.s:536    .text:00000000000001fc .L0 
  src/../h/riscv.hpp:131    .text:00000000000001fc .L0 
     /tmp/cc3y3T6B.s:543    .text:0000000000000200 .L0 
     /tmp/cc3y3T6B.s:552    .text:0000000000000204 .L0 
     /tmp/cc3y3T6B.s:553    .text:0000000000000204 .L0 
     /tmp/cc3y3T6B.s:558    .text:0000000000000210 .L0 
GAS LISTING /tmp/cc3y3T6B.s 			page 22


     /tmp/cc3y3T6B.s:565    .text:0000000000000210 .L0 
     /tmp/cc3y3T6B.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc3y3T6B.s:209    .text:00000000000000c4 .L0 
     /tmp/cc3y3T6B.s:237    .text:00000000000000f4 .L0 
     /tmp/cc3y3T6B.s:435    .text:00000000000001a4 .L0 
     /tmp/cc3y3T6B.s:443    .text:00000000000001b8 .L0 
     /tmp/cc3y3T6B.s:245    .text:0000000000000108 .L14
     /tmp/cc3y3T6B.s:428    .text:00000000000001a4 .L15
     /tmp/cc3y3T6B.s:545    .text:0000000000000204 .L16
     /tmp/cc3y3T6B.s:323    .text:0000000000000144 .L3
     /tmp/cc3y3T6B.s:345    .text:0000000000000160 .L17
     /tmp/cc3y3T6B.s:397    .text:0000000000000188 .L18
     /tmp/cc3y3T6B.s:419    .text:0000000000000198 .L19
     /tmp/cc3y3T6B.s:379    .text:000000000000017c .L20
     /tmp/cc3y3T6B.s:297    .text:000000000000013c .L7
     /tmp/cc3y3T6B.s:474    .text:00000000000001d8 .L21
     /tmp/cc3y3T6B.s:458    .text:00000000000001cc .L11
     /tmp/cc3y3T6B.s:1917   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3y3T6B.s:3402   .debug_str:00000000000005b2 .LASF120
     /tmp/cc3y3T6B.s:3338   .debug_str:000000000000040d .LASF121
     /tmp/cc3y3T6B.s:3350   .debug_str:0000000000000441 .LASF122
     /tmp/cc3y3T6B.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3y3T6B.s:561    .text:0000000000000210 .Letext0
     /tmp/cc3y3T6B.s:3178   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3y3T6B.s:3312   .debug_str:000000000000037c .LASF0
     /tmp/cc3y3T6B.s:3330   .debug_str:00000000000003c7 .LASF1
     /tmp/cc3y3T6B.s:3302   .debug_str:000000000000033a .LASF2
     /tmp/cc3y3T6B.s:3280   .debug_str:00000000000002b9 .LASF4
     /tmp/cc3y3T6B.s:3372   .debug_str:00000000000004e7 .LASF3
     /tmp/cc3y3T6B.s:3204   .debug_str:000000000000007e .LASF5
     /tmp/cc3y3T6B.s:3336   .debug_str:00000000000003fa .LASF6
     /tmp/cc3y3T6B.s:3310   .debug_str:0000000000000369 .LASF7
     /tmp/cc3y3T6B.s:3410   .debug_str:000000000000069b .LASF8
     /tmp/cc3y3T6B.s:3268   .debug_str:000000000000023e .LASF9
     /tmp/cc3y3T6B.s:3352   .debug_str:000000000000045d .LASF10
     /tmp/cc3y3T6B.s:3406   .debug_str:000000000000067b .LASF11
     /tmp/cc3y3T6B.s:3210   .debug_str:000000000000008f .LASF12
     /tmp/cc3y3T6B.s:3182   .debug_str:0000000000000008 .LASF13
     /tmp/cc3y3T6B.s:3224   .debug_str:00000000000000e8 .LASF14
     /tmp/cc3y3T6B.s:3366   .debug_str:00000000000004a8 .LASF15
     /tmp/cc3y3T6B.s:3232   .debug_str:0000000000000120 .LASF16
     /tmp/cc3y3T6B.s:3326   .debug_str:00000000000003b6 .LASF77
     /tmp/cc3y3T6B.s:3290   .debug_str:0000000000000304 .LASF78
     /tmp/cc3y3T6B.s:3388   .debug_str:0000000000000559 .LASF17
     /tmp/cc3y3T6B.s:3324   .debug_str:00000000000003ad .LASF18
     /tmp/cc3y3T6B.s:3284   .debug_str:00000000000002d1 .LASF19
     /tmp/cc3y3T6B.s:3364   .debug_str:000000000000049d .LASF72
     /tmp/cc3y3T6B.s:3424   .debug_str:000000000000071e .LASF74
     /tmp/cc3y3T6B.s:3184   .debug_str:0000000000000018 .LASF20
     /tmp/cc3y3T6B.s:3248   .debug_str:00000000000001a1 .LASF22
     /tmp/cc3y3T6B.s:3244   .debug_str:0000000000000187 .LASF24
     /tmp/cc3y3T6B.s:3242   .debug_str:0000000000000172 .LASF26
     /tmp/cc3y3T6B.s:3376   .debug_str:000000000000050a .LASF21
     /tmp/cc3y3T6B.s:3354   .debug_str:000000000000046c .LASF23
     /tmp/cc3y3T6B.s:3400   .debug_str:00000000000005ab .LASF25
     /tmp/cc3y3T6B.s:3394   .debug_str:0000000000000581 .LASF27
     /tmp/cc3y3T6B.s:3260   .debug_str:0000000000000210 .LASF28
GAS LISTING /tmp/cc3y3T6B.s 			page 23


     /tmp/cc3y3T6B.s:3234   .debug_str:0000000000000136 .LASF29
     /tmp/cc3y3T6B.s:3180   .debug_str:0000000000000000 .LASF30
     /tmp/cc3y3T6B.s:3272   .debug_str:0000000000000262 .LASF31
     /tmp/cc3y3T6B.s:3202   .debug_str:0000000000000076 .LASF32
     /tmp/cc3y3T6B.s:3218   .debug_str:00000000000000ae .LASF33
     /tmp/cc3y3T6B.s:3432   .debug_str:0000000000000758 .LASF34
     /tmp/cc3y3T6B.s:3250   .debug_str:00000000000001b6 .LASF35
     /tmp/cc3y3T6B.s:3314   .debug_str:0000000000000389 .LASF36
     /tmp/cc3y3T6B.s:3420   .debug_str:00000000000006e9 .LASF37
     /tmp/cc3y3T6B.s:3198   .debug_str:0000000000000056 .LASF38
     /tmp/cc3y3T6B.s:3258   .debug_str:00000000000001fd .LASF39
     /tmp/cc3y3T6B.s:3264   .debug_str:0000000000000221 .LASF40
     /tmp/cc3y3T6B.s:3398   .debug_str:0000000000000599 .LASF41
     /tmp/cc3y3T6B.s:3196   .debug_str:0000000000000050 .LASF42
     /tmp/cc3y3T6B.s:3436   .debug_str:0000000000000765 .LASF43
     /tmp/cc3y3T6B.s:3430   .debug_str:000000000000074d .LASF44
     /tmp/cc3y3T6B.s:3370   .debug_str:00000000000004cf .LASF45
     /tmp/cc3y3T6B.s:3328   .debug_str:00000000000003bc .LASF46
     /tmp/cc3y3T6B.s:3390   .debug_str:0000000000000562 .LASF47
     /tmp/cc3y3T6B.s:3222   .debug_str:00000000000000de .LASF48
     /tmp/cc3y3T6B.s:3276   .debug_str:000000000000027b .LASF49
     /tmp/cc3y3T6B.s:3306   .debug_str:000000000000034e .LASF50
     /tmp/cc3y3T6B.s:3270   .debug_str:000000000000024c .LASF51
     /tmp/cc3y3T6B.s:3396   .debug_str:0000000000000594 .LASF52
     /tmp/cc3y3T6B.s:3246   .debug_str:0000000000000190 .LASF53
     /tmp/cc3y3T6B.s:3206   .debug_str:0000000000000085 .LASF54
     /tmp/cc3y3T6B.s:3308   .debug_str:0000000000000358 .LASF55
     /tmp/cc3y3T6B.s:3294   .debug_str:0000000000000315 .LASF56
     /tmp/cc3y3T6B.s:3426   .debug_str:0000000000000736 .LASF57
     /tmp/cc3y3T6B.s:3208   .debug_str:000000000000008a .LASF58
     /tmp/cc3y3T6B.s:3282   .debug_str:00000000000002c0 .LASF59
     /tmp/cc3y3T6B.s:3342   .debug_str:0000000000000426 .LASF60
     /tmp/cc3y3T6B.s:3408   .debug_str:000000000000068a .LASF61
     /tmp/cc3y3T6B.s:3322   .debug_str:00000000000003a8 .LASF62
     /tmp/cc3y3T6B.s:3254   .debug_str:00000000000001dd .LASF63
     /tmp/cc3y3T6B.s:3344   .debug_str:000000000000042b .LASF64
     /tmp/cc3y3T6B.s:3368   .debug_str:00000000000004be .LASF65
     /tmp/cc3y3T6B.s:3212   .debug_str:000000000000009f .LASF66
     /tmp/cc3y3T6B.s:3226   .debug_str:00000000000000f4 .LASF67
     /tmp/cc3y3T6B.s:3404   .debug_str:0000000000000676 .LASF68
     /tmp/cc3y3T6B.s:3334   .debug_str:00000000000003e9 .LASF69
     /tmp/cc3y3T6B.s:3214   .debug_str:00000000000000a4 .LASF70
     /tmp/cc3y3T6B.s:3192   .debug_str:000000000000003a .LASF71
     /tmp/cc3y3T6B.s:3380   .debug_str:0000000000000528 .LASF73
     /tmp/cc3y3T6B.s:3220   .debug_str:00000000000000c2 .LASF75
     /tmp/cc3y3T6B.s:3412   .debug_str:00000000000006ab .LASF100
     /tmp/cc3y3T6B.s:3288   .debug_str:00000000000002e2 .LASF102
     /tmp/cc3y3T6B.s:3346   .debug_str:0000000000000430 .LASF76
     /tmp/cc3y3T6B.s:3190   .debug_str:0000000000000034 .LASF79
     /tmp/cc3y3T6B.s:3414   .debug_str:00000000000006c0 .LASF80
     /tmp/cc3y3T6B.s:3386   .debug_str:0000000000000553 .LASF81
     /tmp/cc3y3T6B.s:3348   .debug_str:0000000000000439 .LASF82
     /tmp/cc3y3T6B.s:3382   .debug_str:0000000000000537 .LASF83
     /tmp/cc3y3T6B.s:3238   .debug_str:000000000000015a .LASF123
     /tmp/cc3y3T6B.s:3274   .debug_str:0000000000000276 .LASF88
     /tmp/cc3y3T6B.s:3356   .debug_str:000000000000047f .LASF90
     /tmp/cc3y3T6B.s:3340   .debug_str:000000000000041b .LASF84
GAS LISTING /tmp/cc3y3T6B.s 			page 24


     /tmp/cc3y3T6B.s:3266   .debug_str:0000000000000227 .LASF86
     /tmp/cc3y3T6B.s:3298   .debug_str:000000000000031f .LASF85
     /tmp/cc3y3T6B.s:3200   .debug_str:000000000000005d .LASF87
     /tmp/cc3y3T6B.s:3230   .debug_str:0000000000000113 .LASF89
     /tmp/cc3y3T6B.s:3422   .debug_str:00000000000006fc .LASF91
     /tmp/cc3y3T6B.s:3360   .debug_str:0000000000000493 .LASF92
     /tmp/cc3y3T6B.s:3304   .debug_str:0000000000000348 .LASF93
     /tmp/cc3y3T6B.s:3236   .debug_str:000000000000014a .LASF94
     /tmp/cc3y3T6B.s:3418   .debug_str:00000000000006e1 .LASF124
     /tmp/cc3y3T6B.s:3378   .debug_str:0000000000000511 .LASF125
     /tmp/cc3y3T6B.s:3216   .debug_str:00000000000000a9 .LASF95
     /tmp/cc3y3T6B.s:3428   .debug_str:0000000000000747 .LASF96
     /tmp/cc3y3T6B.s:3286   .debug_str:00000000000002da .LASF97
     /tmp/cc3y3T6B.s:3320   .debug_str:000000000000039e .LASF98
     /tmp/cc3y3T6B.s:3292   .debug_str:000000000000030f .LASF99
     /tmp/cc3y3T6B.s:3300   .debug_str:000000000000032c .LASF101
     /tmp/cc3y3T6B.s:3416   .debug_str:00000000000006c8 .LASF103
     /tmp/cc3y3T6B.s:3228   .debug_str:0000000000000105 .LASF126
     /tmp/cc3y3T6B.s:3278   .debug_str:0000000000000291 .LASF127
     /tmp/cc3y3T6B.s:3316   .debug_str:0000000000000390 .LASF104
     /tmp/cc3y3T6B.s:3252   .debug_str:00000000000001ca .LASF105
     /tmp/cc3y3T6B.s:3296   .debug_str:000000000000031a .LASF106
     /tmp/cc3y3T6B.s:3256   .debug_str:00000000000001ee .LASF107
     /tmp/cc3y3T6B.s:3374   .debug_str:00000000000004f9 .LASF108
     /tmp/cc3y3T6B.s:3194   .debug_str:000000000000004b .LASF109
     /tmp/cc3y3T6B.s:51     .text:0000000000000020 .LFB43
     /tmp/cc3y3T6B.s:559    .text:0000000000000210 .LFE43
     /tmp/cc3y3T6B.s:2834   .debug_loc:0000000000000000 .LLST0
     /tmp/cc3y3T6B.s:2869   .debug_loc:00000000000000a8 .LLST1
     /tmp/cc3y3T6B.s:2904   .debug_loc:0000000000000150 .LLST2
     /tmp/cc3y3T6B.s:2939   .debug_loc:00000000000001f8 .LLST3
     /tmp/cc3y3T6B.s:2958   .debug_loc:0000000000000254 .LLST4
     /tmp/cc3y3T6B.s:3186   .debug_str:0000000000000021 .LASF110
     /tmp/cc3y3T6B.s:2997   .debug_loc:000000000000030f .LLST5
     /tmp/cc3y3T6B.s:3170   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3y3T6B.s:3318   .debug_str:0000000000000399 .LASF111
     /tmp/cc3y3T6B.s:3040   .debug_loc:00000000000003ce .LLST12
     /tmp/cc3y3T6B.s:3358   .debug_str:000000000000048b .LASF112
     /tmp/cc3y3T6B.s:3051   .debug_loc:0000000000000404 .LLST13
     /tmp/cc3y3T6B.s:350    .text:0000000000000160 .LBB90
     /tmp/cc3y3T6B.s:401    .text:0000000000000188 .LBE90
     /tmp/cc3y3T6B.s:3392   .debug_str:000000000000057a .LASF113
     /tmp/cc3y3T6B.s:3062   .debug_loc:000000000000043a .LLST14
     /tmp/cc3y3T6B.s:358    .text:000000000000016c .LBB92
     /tmp/cc3y3T6B.s:382    .text:000000000000017c .LBE92
     /tmp/cc3y3T6B.s:3069   .debug_loc:000000000000045d .LLST15
     /tmp/cc3y3T6B.s:366    .text:0000000000000170 .LBB93
     /tmp/cc3y3T6B.s:381    .text:000000000000017c .LBE93
     /tmp/cc3y3T6B.s:3076   .debug_loc:0000000000000480 .LLST16
     /tmp/cc3y3T6B.s:384    .text:000000000000017c .LBB95
     /tmp/cc3y3T6B.s:399    .text:0000000000000188 .LBE95
     /tmp/cc3y3T6B.s:3084   .debug_loc:00000000000004a4 .LLST17
     /tmp/cc3y3T6B.s:354    .text:0000000000000168 .LVL20
     /tmp/cc3y3T6B.s:249    .text:0000000000000108 .LBB85
     /tmp/cc3y3T6B.s:264    .text:0000000000000114 .LBE85
     /tmp/cc3y3T6B.s:269    .text:0000000000000118 .LBB87
     /tmp/cc3y3T6B.s:285    .text:0000000000000124 .LBE87
GAS LISTING /tmp/cc3y3T6B.s 			page 25


     /tmp/cc3y3T6B.s:407    .text:0000000000000190 .LBB97
     /tmp/cc3y3T6B.s:421    .text:0000000000000198 .LBE97
     /tmp/cc3y3T6B.s:3093   .debug_loc:00000000000004c9 .LLST18
     /tmp/cc3y3T6B.s:300    .text:000000000000013c .LBB99
     /tmp/cc3y3T6B.s:311    .text:0000000000000140 .LBE99
     /tmp/cc3y3T6B.s:3100   .debug_loc:00000000000004ec .LLST19
     /tmp/cc3y3T6B.s:313    .text:0000000000000140 .LBB101
     /tmp/cc3y3T6B.s:325    .text:0000000000000144 .LBE101
     /tmp/cc3y3T6B.s:3107   .debug_loc:000000000000050f .LLST20
     /tmp/cc3y3T6B.s:405    .text:0000000000000190 .LVL25
     /tmp/cc3y3T6B.s:425    .text:00000000000001a0 .LVL27
     /tmp/cc3y3T6B.s:478    .text:00000000000001d8 .LBB72
     /tmp/cc3y3T6B.s:548    .text:0000000000000204 .LBE72
     /tmp/cc3y3T6B.s:3114   .debug_loc:0000000000000532 .LLST7
     /tmp/cc3y3T6B.s:3121   .debug_loc:0000000000000555 .LLST8
     /tmp/cc3y3T6B.s:480    .text:00000000000001d8 .LBB73
     /tmp/cc3y3T6B.s:496    .text:00000000000001e4 .LBE73
     /tmp/cc3y3T6B.s:498    .text:00000000000001e4 .LBB75
     /tmp/cc3y3T6B.s:514    .text:00000000000001f0 .LBE75
     /tmp/cc3y3T6B.s:520    .text:00000000000001f8 .LBB77
     /tmp/cc3y3T6B.s:531    .text:00000000000001fc .LBE77
     /tmp/cc3y3T6B.s:3128   .debug_loc:0000000000000578 .LLST9
     /tmp/cc3y3T6B.s:533    .text:00000000000001fc .LBB79
     /tmp/cc3y3T6B.s:547    .text:0000000000000204 .LBE79
     /tmp/cc3y3T6B.s:3135   .debug_loc:000000000000059b .LLST10
     /tmp/cc3y3T6B.s:518    .text:00000000000001f8 .LVL36
     /tmp/cc3y3T6B.s:69     .text:000000000000003c .LBB52
     /tmp/cc3y3T6B.s:86     .text:0000000000000048 .LBE52
     /tmp/cc3y3T6B.s:88     .text:0000000000000048 .LBB54
     /tmp/cc3y3T6B.s:104    .text:0000000000000054 .LBE54
     /tmp/cc3y3T6B.s:106    .text:0000000000000054 .LBB56
     /tmp/cc3y3T6B.s:122    .text:0000000000000060 .LBE56
     /tmp/cc3y3T6B.s:124    .text:0000000000000060 .LBB58
     /tmp/cc3y3T6B.s:140    .text:000000000000006c .LBE58
     /tmp/cc3y3T6B.s:142    .text:000000000000006c .LBB60
     /tmp/cc3y3T6B.s:158    .text:0000000000000078 .LBE60
     /tmp/cc3y3T6B.s:160    .text:0000000000000078 .LBB62
     /tmp/cc3y3T6B.s:176    .text:0000000000000084 .LBE62
     /tmp/cc3y3T6B.s:213    .text:00000000000000d4 .LBB66
     /tmp/cc3y3T6B.s:228    .text:00000000000000e0 .LBE66
     /tmp/cc3y3T6B.s:446    .text:00000000000001c4 .LBB70
     /tmp/cc3y3T6B.s:454    .text:00000000000001c8 .LBE70
     /tmp/cc3y3T6B.s:3142   .debug_loc:00000000000005be .LLST6
     /tmp/cc3y3T6B.s:461    .text:00000000000001cc .LBB81
     /tmp/cc3y3T6B.s:476    .text:00000000000001d8 .LBE81
     /tmp/cc3y3T6B.s:3149   .debug_loc:00000000000005e1 .LLST11
     /tmp/cc3y3T6B.s:206    .text:00000000000000c4 .LVL9
     /tmp/cc3y3T6B.s:211    .text:00000000000000d4 .LVL10
     /tmp/cc3y3T6B.s:234    .text:00000000000000f4 .LVL11
     /tmp/cc3y3T6B.s:239    .text:0000000000000104 .LVL12
     /tmp/cc3y3T6B.s:554    .text:000000000000020c .LVL39
     /tmp/cc3y3T6B.s:10     .text:0000000000000000 .LFB42
     /tmp/cc3y3T6B.s:40     .text:0000000000000020 .LFE42
     /tmp/cc3y3T6B.s:3362   .debug_str:0000000000000498 .LASF128
     /tmp/cc3y3T6B.s:3434   .debug_str:0000000000000760 .LASF114
     /tmp/cc3y3T6B.s:3332   .debug_str:00000000000003da .LASF115
     /tmp/cc3y3T6B.s:3262   .debug_str:0000000000000218 .LASF117
GAS LISTING /tmp/cc3y3T6B.s 			page 26


     /tmp/cc3y3T6B.s:3384   .debug_str:0000000000000540 .LASF116
     /tmp/cc3y3T6B.s:3188   .debug_str:0000000000000028 .LASF118
     /tmp/cc3y3T6B.s:3240   .debug_str:0000000000000162 .LASF119
     /tmp/cc3y3T6B.s:84     .text:0000000000000048 .LVL0
     /tmp/cc3y3T6B.s:200    .text:00000000000000b4 .LVL6
     /tmp/cc3y3T6B.s:244    .text:0000000000000108 .LVL13
     /tmp/cc3y3T6B.s:296    .text:000000000000013c .LVL16
     /tmp/cc3y3T6B.s:344    .text:0000000000000160 .LVL19
     /tmp/cc3y3T6B.s:396    .text:0000000000000188 .LVL24
     /tmp/cc3y3T6B.s:418    .text:0000000000000198 .LVL26
     /tmp/cc3y3T6B.s:427    .text:00000000000001a4 .LVL28
     /tmp/cc3y3T6B.s:457    .text:00000000000001cc .LVL32
     /tmp/cc3y3T6B.s:473    .text:00000000000001d8 .LVL33
     /tmp/cc3y3T6B.s:544    .text:0000000000000204 .LVL38
     /tmp/cc3y3T6B.s:102    .text:0000000000000054 .LVL1
     /tmp/cc3y3T6B.s:202    .text:00000000000000b8 .LVL7
     /tmp/cc3y3T6B.s:120    .text:0000000000000060 .LVL2
     /tmp/cc3y3T6B.s:204    .text:00000000000000bc .LVL8
     /tmp/cc3y3T6B.s:138    .text:000000000000006c .LVL3
     /tmp/cc3y3T6B.s:321    .text:0000000000000144 .LVL18
     /tmp/cc3y3T6B.s:512    .text:00000000000001f0 .LVL35
     /tmp/cc3y3T6B.s:156    .text:0000000000000078 .LVL4
     /tmp/cc3y3T6B.s:174    .text:0000000000000084 .LVL5
     /tmp/cc3y3T6B.s:436    .text:00000000000001ac .LVL29
     /tmp/cc3y3T6B.s:267    .text:0000000000000118 .LVL14
     /tmp/cc3y3T6B.s:283    .text:0000000000000124 .LVL15
     /tmp/cc3y3T6B.s:360    .text:000000000000016c .LVL21
     /tmp/cc3y3T6B.s:378    .text:000000000000017c .LVL23
     /tmp/cc3y3T6B.s:365    .text:0000000000000170 .LVL22
     /tmp/cc3y3T6B.s:308    .text:0000000000000140 .LVL17
     /tmp/cc3y3T6B.s:494    .text:00000000000001e4 .LVL34
     /tmp/cc3y3T6B.s:528    .text:00000000000001fc .LVL37
     /tmp/cc3y3T6B.s:445    .text:00000000000001c4 .LVL30
     /tmp/cc3y3T6B.s:452    .text:00000000000001c8 .LVL31
     /tmp/cc3y3T6B.s:566    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3y3T6B.s:247    .text:0000000000000108 .LBB84
     /tmp/cc3y3T6B.s:326    .text:0000000000000144 .LBE84
     /tmp/cc3y3T6B.s:348    .text:0000000000000160 .LBB104
     /tmp/cc3y3T6B.s:430    .text:00000000000001a4 .LBE104

UNDEFINED SYMBOLS
_Z8printIntiii
_Z11printStringPKc
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB4exitEv
_ZN3TCB8dispatchEv
_ZN3TCB16timeSliceCounterE
_ZN3TCB7runningE
console_handler
