GAS LISTING /tmp/ccxl7jBB.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB13threadWrapperEv
   9              	_ZN3TCB13threadWrapperEv:
  10              	.LFB49:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** #include "../h/tcb.hpp"
   2:src/tcb.cpp   **** #include "../h/riscv.hpp"
   3:src/tcb.cpp   **** 
   4:src/tcb.cpp   **** TCB *TCB::running = nullptr;
   5:src/tcb.cpp   **** uint64 TCB::timeSliceCounter = 0;
   6:src/tcb.cpp   **** uint64 TCB::ID = 0;
   7:src/tcb.cpp   **** 
   8:src/tcb.cpp   **** TCB *TCB::createThread(Body body, Arg arg, uint64* stack) {
   9:src/tcb.cpp   ****     TCB* t = initializeThread(body, arg, stack);
  10:src/tcb.cpp   ****     t->start();
  11:src/tcb.cpp   ****     return t;
  12:src/tcb.cpp   **** }
  13:src/tcb.cpp   **** 
  14:src/tcb.cpp   **** void TCB::dispatch() {
  15:src/tcb.cpp   ****     TCB::timeSliceCounter = 0;
  16:src/tcb.cpp   **** 
  17:src/tcb.cpp   ****     TCB *old = running;
  18:src/tcb.cpp   **** 
  19:src/tcb.cpp   ****     if (!old->isFinished() && old->state != BLOCKED) {
  20:src/tcb.cpp   ****         old->state = READY;
  21:src/tcb.cpp   ****         Scheduler::put(old);
  22:src/tcb.cpp   ****     }
  23:src/tcb.cpp   **** 
  24:src/tcb.cpp   ****     running = Scheduler::get();
  25:src/tcb.cpp   ****     running->state = RUNNING;
  26:src/tcb.cpp   **** 
  27:src/tcb.cpp   ****     if (TCB::running->id == 0) {
  28:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  29:src/tcb.cpp   ****     } else {
  30:src/tcb.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
  31:src/tcb.cpp   ****     }
  32:src/tcb.cpp   **** 
  33:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  34:src/tcb.cpp   **** }
  35:src/tcb.cpp   **** 
  36:src/tcb.cpp   **** void TCB::threadWrapper() {
  12              		.loc 1 36 27
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  37:src/tcb.cpp   ****     Riscv::popSppSpie();
GAS LISTING /tmp/ccxl7jBB.s 			page 2


  22              		.loc 1 37 5
  23              		.loc 1 37 22 is_stmt 0
  24 0010 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  24      E7800000 
  25              	.LVL0:
  38:src/tcb.cpp   ****     running->body(running->arg);
  26              		.loc 1 38 5 is_stmt 1
  27              		.loc 1 38 14 is_stmt 0
  28 0018 97070000 		ld	a5,.LANCHOR0
  28      83B70700 
  29 0020 03B78700 		ld	a4,8(a5)
  30              		.loc 1 38 18
  31 0024 03B50701 		ld	a0,16(a5)
  32 0028 E7000700 		jalr	a4
  33              	.LVL1:
  39:src/tcb.cpp   ****     thread_exit();
  34              		.loc 1 39 5 is_stmt 1
  35              		.loc 1 39 16 is_stmt 0
  36 002c 97000000 		call	_Z11thread_exitv@plt
  36      E7800000 
  37              	.LVL2:
  40:src/tcb.cpp   **** }
  38              		.loc 1 40 1
  39 0034 83308100 		ld	ra,8(sp)
  40              		.cfi_restore 1
  41 0038 03340100 		ld	s0,0(sp)
  42              		.cfi_restore 8
  43              		.cfi_def_cfa 2, 16
  44 003c 13010101 		addi	sp,sp,16
  45              		.cfi_def_cfa_offset 0
  46 0040 67800000 		jr	ra
  47              		.cfi_endproc
  48              	.LFE49:
  50              		.align	2
  51              		.globl	_ZN3TCB8dispatchEv
  53              	_ZN3TCB8dispatchEv:
  54              	.LFB48:
  14:src/tcb.cpp   ****     TCB::timeSliceCounter = 0;
  55              		.loc 1 14 22 is_stmt 1
  56              		.cfi_startproc
  57 0044 130101FE 		addi	sp,sp,-32
  58              		.cfi_def_cfa_offset 32
  59 0048 233C1100 		sd	ra,24(sp)
  60 004c 23388100 		sd	s0,16(sp)
  61 0050 23349100 		sd	s1,8(sp)
  62              		.cfi_offset 1, -8
  63              		.cfi_offset 8, -16
  64              		.cfi_offset 9, -24
  65 0054 13040102 		addi	s0,sp,32
  66              		.cfi_def_cfa 8, 0
  15:src/tcb.cpp   **** 
  67              		.loc 1 15 5
  15:src/tcb.cpp   **** 
  68              		.loc 1 15 27 is_stmt 0
  69 0058 97070000 		lla	a5,.LANCHOR0
  69      93870700 
  70 0060 23B40700 		sd	zero,8(a5)
GAS LISTING /tmp/ccxl7jBB.s 			page 3


  17:src/tcb.cpp   **** 
  71              		.loc 1 17 5 is_stmt 1
  17:src/tcb.cpp   **** 
  72              		.loc 1 17 10 is_stmt 0
  73 0064 83B40700 		ld	s1,0(a5)
  74              	.LVL3:
  19:src/tcb.cpp   ****         old->state = READY;
  75              		.loc 1 19 5 is_stmt 1
  76              	.LBB13:
  77              	.LBB14:
  78              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_HPP
   2:src/../h/tcb.hpp **** #define TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** #include "../test/printing.hpp"
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** // Thread Control Block
   9:src/../h/tcb.hpp **** class TCB
  10:src/../h/tcb.hpp **** {
  11:src/../h/tcb.hpp **** public:
  12:src/../h/tcb.hpp ****     enum State {CREATED, READY, RUNNING, BLOCKED, FINISHED};
  13:src/../h/tcb.hpp **** 
  14:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  15:src/../h/tcb.hpp **** 
  16:src/../h/tcb.hpp ****     bool isFinished() const { return this->state == FINISHED; }
  79              		.loc 2 16 31
  80              		.loc 2 16 44 is_stmt 0
  81 0068 83A78403 		lw	a5,56(s1)
  82              	.LVL4:
  83              	.LBE14:
  84              	.LBE13:
  19:src/tcb.cpp   ****         old->state = READY;
  85              		.loc 1 19 28
  86 006c 13074000 		li	a4,4
  87 0070 6386E700 		beq	a5,a4,.L4
  19:src/tcb.cpp   ****         old->state = READY;
  88              		.loc 1 19 28 discriminator 1
  89 0074 13073000 		li	a4,3
  90 0078 6398E704 		bne	a5,a4,.L8
  91              	.L4:
  24:src/tcb.cpp   ****     running->state = RUNNING;
  92              		.loc 1 24 5 is_stmt 1
  24:src/tcb.cpp   ****     running->state = RUNNING;
  93              		.loc 1 24 29 is_stmt 0
  94 007c 97000000 		call	_ZN9Scheduler3getEv@plt
  94      E7800000 
  95              	.LVL5:
  24:src/tcb.cpp   ****     running->state = RUNNING;
  96              		.loc 1 24 13
  97 0084 97070000 		sd	a0,.LANCHOR0,a5
  97      23B0A700 
  25:src/tcb.cpp   **** 
  98              		.loc 1 25 5 is_stmt 1
  25:src/tcb.cpp   **** 
  99              		.loc 1 25 20 is_stmt 0
GAS LISTING /tmp/ccxl7jBB.s 			page 4


 100 008c 93072000 		li	a5,2
 101 0090 232CF502 		sw	a5,56(a0)
  27:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 102              		.loc 1 27 5 is_stmt 1
  27:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 103              		.loc 1 27 23 is_stmt 0
 104 0094 83370500 		ld	a5,0(a0)
  27:src/tcb.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 105              		.loc 1 27 5
 106 0098 63940704 		bnez	a5,.L5
  28:src/tcb.cpp   ****     } else {
 107              		.loc 1 28 9 is_stmt 1
 108              	.LVL6:
 109              	.LBB15:
 110              	.LBB16:
 111              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  10:src/../h/riscv.hpp ****     static void popSppSpie();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     // read register scause
  13:src/../h/riscv.hpp ****     static uint64 r_scause();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // write register scause
  16:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // read register sepc
  19:src/../h/riscv.hpp ****     static uint64 r_sepc();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // write register sepc
  22:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // read register stvec
  25:src/../h/riscv.hpp ****     static uint64 r_stvec();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // write register stvec
  28:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // read register stval
  31:src/../h/riscv.hpp ****     static uint64 r_stval();
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // write register stval
  34:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     enum BitMaskSip
  37:src/../h/riscv.hpp ****     {
  38:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  39:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  40:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  41:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccxl7jBB.s 			page 5


  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // mask set register sip
  44:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // mask clear register sip
  47:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     // read register sip
  50:src/../h/riscv.hpp ****     static uint64 r_sip();
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // write register sip
  53:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     enum BitMaskSstatus
  56:src/../h/riscv.hpp ****     {
  57:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  58:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  59:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  60:src/../h/riscv.hpp ****     };
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // mask set register sstatus
  63:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // mask clear register sstatus
  66:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     // read register sstatus
  69:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // write register sstatus
  72:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     //read a0
  75:src/../h/riscv.hpp ****     static long r_a0();
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     //write a0
  78:src/../h/riscv.hpp ****     static void w_a0(long a0);
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     //read a1
  81:src/../h/riscv.hpp ****     static uint64 r_a1();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     //write a1
  84:src/../h/riscv.hpp ****     static void w_a1(uint64 a1);
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     //read a2
  87:src/../h/riscv.hpp ****     static uint64 r_a2();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp ****     //write a2
  90:src/../h/riscv.hpp ****     static void w_a2(uint64 a2);
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     //read a3
  93:src/../h/riscv.hpp ****     static uint64 r_a3();
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp ****     //write a3
  96:src/../h/riscv.hpp ****     static void w_a3(uint64 a3);
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp ****     //read a4
GAS LISTING /tmp/ccxl7jBB.s 			page 6


  99:src/../h/riscv.hpp ****     static uint64 r_a4();
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp ****     //write a4
 102:src/../h/riscv.hpp ****     static void w_a4(uint64 a4);
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp ****     static void w_a0_stack(long a0);
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp ****     // supervisor trap
 107:src/../h/riscv.hpp ****     static void supervisorTrap();
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** private:
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp ****     // supervisor trap handler
 112:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 113:src/../h/riscv.hpp **** 
 114:src/../h/riscv.hpp **** };
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
 117:src/../h/riscv.hpp ****     uint64 volatile scause;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 119:src/../h/riscv.hpp ****     return scause;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 123:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 124:src/../h/riscv.hpp **** }
 125:src/../h/riscv.hpp **** 
 126:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
 127:src/../h/riscv.hpp ****     uint64 volatile sepc;
 128:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 129:src/../h/riscv.hpp ****     return sepc;
 130:src/../h/riscv.hpp **** }
 131:src/../h/riscv.hpp **** 
 132:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 134:src/../h/riscv.hpp **** }
 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
 137:src/../h/riscv.hpp ****     uint64 volatile stvec;
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 139:src/../h/riscv.hpp ****     return stvec;
 140:src/../h/riscv.hpp **** }
 141:src/../h/riscv.hpp **** 
 142:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
 147:src/../h/riscv.hpp ****     uint64 volatile stval;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 149:src/../h/riscv.hpp ****     return stval;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccxl7jBB.s 			page 7


 156:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 158:src/../h/riscv.hpp **** }
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 162:src/../h/riscv.hpp **** }
 163:src/../h/riscv.hpp **** 
 164:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 165:src/../h/riscv.hpp ****     uint64 volatile sip;
 166:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 167:src/../h/riscv.hpp ****     return sip;
 168:src/../h/riscv.hpp **** }
 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 171:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 112              		.loc 3 175 5
 113              		.loc 3 175 68 is_stmt 0
 114 009c 93070010 		li	a5,256
 115              	#APP
 116              	# 175 "src/../h/riscv.hpp" 1
 176              	}
 117              		csrs sstatus, a5
 118              	# 0 "" 2
 119              	.LVL7:
 120              	#NO_APP
 121              	.L6:
 122              	.LBE16:
 123              	.LBE15:
  33:src/tcb.cpp   **** }
 124              		.loc 1 33 5 is_stmt 1
  33:src/tcb.cpp   **** }
 125              		.loc 1 33 23 is_stmt 0
 126 00a4 93050502 		addi	a1,a0,32
 127 00a8 13850402 		addi	a0,s1,32
 128 00ac 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 128      E7800000 
 129              	.LVL8:
  34:src/tcb.cpp   **** 
 130              		.loc 1 34 1
 131 00b4 83308101 		ld	ra,24(sp)
 132              		.cfi_remember_state
 133              		.cfi_restore 1
 134 00b8 03340101 		ld	s0,16(sp)
 135              		.cfi_restore 8
 136              		.cfi_def_cfa 2, 32
 137 00bc 83348100 		ld	s1,8(sp)
 138              		.cfi_restore 9
 139              	.LVL9:
 140 00c0 13010102 		addi	sp,sp,32
 141              		.cfi_def_cfa_offset 0
 142 00c4 67800000 		jr	ra
 143              	.LVL10:
GAS LISTING /tmp/ccxl7jBB.s 			page 8


 144              	.L8:
 145              		.cfi_restore_state
  20:src/tcb.cpp   ****         Scheduler::put(old);
 146              		.loc 1 20 9 is_stmt 1
  20:src/tcb.cpp   ****         Scheduler::put(old);
 147              		.loc 1 20 20 is_stmt 0
 148 00c8 93071000 		li	a5,1
 149 00cc 23ACF402 		sw	a5,56(s1)
  21:src/tcb.cpp   ****     }
 150              		.loc 1 21 9 is_stmt 1
  21:src/tcb.cpp   ****     }
 151              		.loc 1 21 23 is_stmt 0
 152 00d0 13850400 		mv	a0,s1
 153 00d4 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 153      E7800000 
 154              	.LVL11:
 155 00dc 6FF01FFA 		j	.L4
 156              	.L5:
  30:src/tcb.cpp   ****     }
 157              		.loc 1 30 9 is_stmt 1
 158              	.LVL12:
 159              	.LBB17:
 160              	.LBB18:
 177:src/../h/riscv.hpp **** 
 178:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 179:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 161              		.loc 3 179 5
 162              		.loc 3 179 68 is_stmt 0
 163 00e0 93070010 		li	a5,256
 164              	#APP
 165              	# 179 "src/../h/riscv.hpp" 1
 180              	}
 166              		csrc sstatus, a5
 167              	# 0 "" 2
 168              		.loc 3 180 1
 169              	#NO_APP
 170 00e8 6FF0DFFB 		j	.L6
 171              	.LBE18:
 172              	.LBE17:
 173              		.cfi_endproc
 174              	.LFE48:
 176              		.align	2
 177              		.globl	_ZN3TCB4exitEv
 179              	_ZN3TCB4exitEv:
 180              	.LFB50:
  41:src/tcb.cpp   **** 
  42:src/tcb.cpp   **** int TCB::exit() {
 181              		.loc 1 42 17 is_stmt 1
 182              		.cfi_startproc
  43:src/tcb.cpp   ****     if(running->state == RUNNING){
 183              		.loc 1 43 5
 184              		.loc 1 43 17 is_stmt 0
 185 00ec 97070000 		ld	a5,.LANCHOR0
 185      83B70700 
 186 00f4 83A68703 		lw	a3,56(a5)
 187              		.loc 1 43 5
 188 00f8 13072000 		li	a4,2
GAS LISTING /tmp/ccxl7jBB.s 			page 9


 189 00fc 639CE602 		bne	a3,a4,.L11
  42:src/tcb.cpp   ****     if(running->state == RUNNING){
 190              		.loc 1 42 17
 191 0100 130101FF 		addi	sp,sp,-16
 192              		.cfi_def_cfa_offset 16
 193 0104 23341100 		sd	ra,8(sp)
 194 0108 23308100 		sd	s0,0(sp)
 195              		.cfi_offset 1, -8
 196              		.cfi_offset 8, -16
 197 010c 13040101 		addi	s0,sp,16
 198              		.cfi_def_cfa 8, 0
  44:src/tcb.cpp   ****         running->state = FINISHED;
 199              		.loc 1 44 9 is_stmt 1
 200              		.loc 1 44 24 is_stmt 0
 201 0110 13074000 		li	a4,4
 202 0114 23ACE702 		sw	a4,56(a5)
  45:src/tcb.cpp   ****         dispatch();
 203              		.loc 1 45 9 is_stmt 1
 204              		.loc 1 45 17 is_stmt 0
 205 0118 97000000 		call	_ZN3TCB8dispatchEv
 205      E7800000 
 206              	.LVL13:
  46:src/tcb.cpp   ****         return 0;
 207              		.loc 1 46 9 is_stmt 1
 208              		.loc 1 46 16 is_stmt 0
 209 0120 13050000 		li	a0,0
  47:src/tcb.cpp   ****     }
  48:src/tcb.cpp   ****     return -1;
  49:src/tcb.cpp   **** }
 210              		.loc 1 49 1
 211 0124 83308100 		ld	ra,8(sp)
 212              		.cfi_restore 1
 213 0128 03340100 		ld	s0,0(sp)
 214              		.cfi_restore 8
 215              		.cfi_def_cfa 2, 16
 216 012c 13010101 		addi	sp,sp,16
 217              		.cfi_def_cfa_offset 0
 218 0130 67800000 		jr	ra
 219              	.L11:
  48:src/tcb.cpp   **** }
 220              		.loc 1 48 13
 221 0134 1305F0FF 		li	a0,-1
 222              		.loc 1 49 1
 223 0138 67800000 		ret
 224              		.cfi_endproc
 225              	.LFE50:
 227              		.align	2
 228              		.globl	_ZN3TCB5startEv
 230              	_ZN3TCB5startEv:
 231              	.LFB51:
  50:src/tcb.cpp   **** 
  51:src/tcb.cpp   **** int TCB::start() {
 232              		.loc 1 51 18 is_stmt 1
 233              		.cfi_startproc
 234              	.LVL14:
  52:src/tcb.cpp   ****     if(this->state != CREATED) return -1;
 235              		.loc 1 52 5
GAS LISTING /tmp/ccxl7jBB.s 			page 10


 236              		.loc 1 52 14 is_stmt 0
 237 013c 83278503 		lw	a5,56(a0)
 238              		.loc 1 52 5
 239 0140 63940704 		bnez	a5,.L18
  53:src/tcb.cpp   ****     this->state = READY;
 240              		.loc 1 53 5 is_stmt 1
 241              		.loc 1 53 17 is_stmt 0
 242 0144 93071000 		li	a5,1
 243 0148 232CF502 		sw	a5,56(a0)
  54:src/tcb.cpp   ****     if (this->id != 0) { Scheduler::put(this); }
 244              		.loc 1 54 5 is_stmt 1
 245              		.loc 1 54 15 is_stmt 0
 246 014c 83370500 		ld	a5,0(a0)
 247              		.loc 1 54 5
 248 0150 63960700 		bnez	a5,.L24
  55:src/tcb.cpp   ****     return 0;
 249              		.loc 1 55 12
 250 0154 13050000 		li	a0,0
 251              	.LVL15:
  56:src/tcb.cpp   **** }
 252              		.loc 1 56 1
 253 0158 67800000 		ret
 254              	.LVL16:
 255              	.L24:
  51:src/tcb.cpp   ****     if(this->state != CREATED) return -1;
 256              		.loc 1 51 18 discriminator 1
 257 015c 130101FF 		addi	sp,sp,-16
 258              		.cfi_def_cfa_offset 16
 259 0160 23341100 		sd	ra,8(sp)
 260 0164 23308100 		sd	s0,0(sp)
 261              		.cfi_offset 1, -8
 262              		.cfi_offset 8, -16
 263 0168 13040101 		addi	s0,sp,16
 264              		.cfi_def_cfa 8, 0
  54:src/tcb.cpp   ****     return 0;
 265              		.loc 1 54 26 is_stmt 1 discriminator 1
  54:src/tcb.cpp   ****     return 0;
 266              		.loc 1 54 40 is_stmt 0 discriminator 1
 267 016c 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 267      E7800000 
 268              	.LVL17:
  55:src/tcb.cpp   **** }
 269              		.loc 1 55 12 discriminator 1
 270 0174 13050000 		li	a0,0
 271              		.loc 1 56 1 discriminator 1
 272 0178 83308100 		ld	ra,8(sp)
 273              		.cfi_restore 1
 274 017c 03340100 		ld	s0,0(sp)
 275              		.cfi_restore 8
 276              		.cfi_def_cfa 2, 16
 277 0180 13010101 		addi	sp,sp,16
 278              		.cfi_def_cfa_offset 0
 279 0184 67800000 		jr	ra
 280              	.LVL18:
 281              	.L18:
  52:src/tcb.cpp   ****     this->state = READY;
 282              		.loc 1 52 40
GAS LISTING /tmp/ccxl7jBB.s 			page 11


 283 0188 1305F0FF 		li	a0,-1
 284              	.LVL19:
 285 018c 67800000 		ret
 286              		.cfi_endproc
 287              	.LFE51:
 289              		.align	2
 290              		.globl	_ZN3TCB16initializeThreadEPFvPvES0_Pm
 292              	_ZN3TCB16initializeThreadEPFvPvES0_Pm:
 293              	.LFB52:
  57:src/tcb.cpp   **** 
  58:src/tcb.cpp   **** TCB *TCB::initializeThread(TCB::Body body, TCB::Arg arg, uint64 *stack) {
 294              		.loc 1 58 73 is_stmt 1
 295              		.cfi_startproc
 296              	.LVL20:
 297 0190 130101FD 		addi	sp,sp,-48
 298              		.cfi_def_cfa_offset 48
 299 0194 23341102 		sd	ra,40(sp)
 300 0198 23308102 		sd	s0,32(sp)
 301 019c 233C9100 		sd	s1,24(sp)
 302 01a0 23382101 		sd	s2,16(sp)
 303 01a4 23343101 		sd	s3,8(sp)
 304              		.cfi_offset 1, -8
 305              		.cfi_offset 8, -16
 306              		.cfi_offset 9, -24
 307              		.cfi_offset 18, -32
 308              		.cfi_offset 19, -40
 309 01a8 13040103 		addi	s0,sp,48
 310              		.cfi_def_cfa 8, 0
 311 01ac 13090500 		mv	s2,a0
 312 01b0 93890500 		mv	s3,a1
 313 01b4 93040600 		mv	s1,a2
  59:src/tcb.cpp   ****     return new TCB(body, arg, stack, DEFAULT_TIME_SLICE);
 314              		.loc 1 59 5
 315              	.LVL21:
 316              	.LBB19:
 317              	.LBB20:
  17:src/../h/tcb.hpp **** 
  18:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  19:src/../h/tcb.hpp **** 
  20:src/../h/tcb.hpp ****     int start();
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     using Body = void (*)(void*);
  23:src/../h/tcb.hpp **** 
  24:src/../h/tcb.hpp ****     using Arg = void*;
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     static TCB* createThread(Body body, Arg arg, uint64* stack);
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     static TCB* initializeThread(Body body, Arg arg, uint64* stack);
  29:src/../h/tcb.hpp **** 
  30:src/../h/tcb.hpp ****     static TCB *running;
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     void *operator new(size_t size) { return __mem_alloc(size); }
 318              		.loc 2 32 39
 319              		.loc 2 32 57 is_stmt 0
 320 01b8 13050004 		li	a0,64
 321              	.LVL22:
 322 01bc 97000000 		call	__mem_alloc@plt
GAS LISTING /tmp/ccxl7jBB.s 			page 12


 322      E7800000 
 323              	.LVL23:
 324              	.LBE20:
 325              	.LBE19:
 326              	.LBB21:
 327              	.LBB22:
  33:src/../h/tcb.hpp ****     void operator delete(void *ptr) { __mem_free(ptr); }
  34:src/../h/tcb.hpp **** 
  35:src/../h/tcb.hpp **** private:
  36:src/../h/tcb.hpp ****     TCB(Body body, Arg arg, uint64 *stack, uint64 timeSlice) :
  37:src/../h/tcb.hpp ****             body(body),
  38:src/../h/tcb.hpp ****             arg(arg),
  39:src/../h/tcb.hpp ****             stack(body != nullptr ? stack : nullptr),
  40:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  41:src/../h/tcb.hpp ****                      stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE] : 0
  42:src/../h/tcb.hpp ****                     }),
  43:src/../h/tcb.hpp ****             timeSlice(timeSlice)
 328              		.loc 2 43 32
 329 01c4 23342501 		sd	s2,8(a0)
 330 01c8 23383501 		sd	s3,16(a0)
  39:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 331              		.loc 2 39 35
 332 01cc 63040906 		beqz	s2,.L28
 333 01d0 93870400 		mv	a5,s1
 334              	.L26:
 335              		.loc 2 43 32
 336 01d4 233CF500 		sd	a5,24(a0)
 337 01d8 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
 337      93870700 
 338 01e0 2330F502 		sd	a5,32(a0)
  41:src/../h/tcb.hpp ****                     }),
 339              		.loc 2 41 39
 340 01e4 638C0404 		beqz	s1,.L29
  41:src/../h/tcb.hpp ****                     }),
 341              		.loc 2 41 50
 342 01e8 37860000 		li	a2,32768
 343 01ec B384C400 		add	s1,s1,a2
 344              	.LVL24:
 345              	.L27:
 346              		.loc 2 43 32
 347 01f0 23349502 		sd	s1,40(a0)
 348 01f4 93072000 		li	a5,2
 349 01f8 2338F502 		sd	a5,48(a0)
  44:src/../h/tcb.hpp ****     {
  45:src/../h/tcb.hpp ****         this->id = ID++;
 350              		.loc 2 45 9 is_stmt 1
 351              		.loc 2 45 22 is_stmt 0
 352 01fc 17070000 		lla	a4,.LANCHOR0
 352      13070700 
 353 0204 83370701 		ld	a5,16(a4)
 354 0208 93861700 		addi	a3,a5,1
 355 020c 2338D700 		sd	a3,16(a4)
 356              		.loc 2 45 18
 357 0210 2330F500 		sd	a5,0(a0)
  46:src/../h/tcb.hpp ****         this->state = CREATED;
 358              		.loc 2 46 9 is_stmt 1
 359              		.loc 2 46 21 is_stmt 0
GAS LISTING /tmp/ccxl7jBB.s 			page 13


 360 0214 232C0502 		sw	zero,56(a0)
 361              	.LVL25:
 362              	.LBE22:
 363              	.LBE21:
  60:src/tcb.cpp   **** }
 364              		.loc 1 60 1
 365 0218 83308102 		ld	ra,40(sp)
 366              		.cfi_remember_state
 367              		.cfi_restore 1
 368 021c 03340102 		ld	s0,32(sp)
 369              		.cfi_restore 8
 370              		.cfi_def_cfa 2, 48
 371 0220 83348101 		ld	s1,24(sp)
 372              		.cfi_restore 9
 373 0224 03390101 		ld	s2,16(sp)
 374              		.cfi_restore 18
 375              	.LVL26:
 376 0228 83398100 		ld	s3,8(sp)
 377              		.cfi_restore 19
 378              	.LVL27:
 379 022c 13010103 		addi	sp,sp,48
 380              		.cfi_def_cfa_offset 0
 381 0230 67800000 		jr	ra
 382              	.LVL28:
 383              	.L28:
 384              		.cfi_restore_state
 385              	.LBB24:
 386              	.LBB23:
  39:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 387              		.loc 2 39 35
 388 0234 93070000 		li	a5,0
 389 0238 6FF0DFF9 		j	.L26
 390              	.L29:
  41:src/../h/tcb.hpp ****                     }),
 391              		.loc 2 41 39
 392 023c 93040000 		li	s1,0
 393              	.LVL29:
 394 0240 6FF01FFB 		j	.L27
 395              	.LBE23:
 396              	.LBE24:
 397              		.cfi_endproc
 398              	.LFE52:
 400              		.align	2
 401              		.globl	_ZN3TCB12createThreadEPFvPvES0_Pm
 403              	_ZN3TCB12createThreadEPFvPvES0_Pm:
 404              	.LFB47:
   8:src/tcb.cpp   ****     TCB* t = initializeThread(body, arg, stack);
 405              		.loc 1 8 59 is_stmt 1
 406              		.cfi_startproc
 407              	.LVL30:
 408 0244 130101FE 		addi	sp,sp,-32
 409              		.cfi_def_cfa_offset 32
 410 0248 233C1100 		sd	ra,24(sp)
 411 024c 23388100 		sd	s0,16(sp)
 412 0250 23349100 		sd	s1,8(sp)
 413              		.cfi_offset 1, -8
 414              		.cfi_offset 8, -16
GAS LISTING /tmp/ccxl7jBB.s 			page 14


 415              		.cfi_offset 9, -24
 416 0254 13040102 		addi	s0,sp,32
 417              		.cfi_def_cfa 8, 0
   9:src/tcb.cpp   ****     t->start();
 418              		.loc 1 9 5
   9:src/tcb.cpp   ****     t->start();
 419              		.loc 1 9 30 is_stmt 0
 420 0258 97000000 		call	_ZN3TCB16initializeThreadEPFvPvES0_Pm
 420      E7800000 
 421              	.LVL31:
 422 0260 93040500 		mv	s1,a0
 423              	.LVL32:
  10:src/tcb.cpp   ****     return t;
 424              		.loc 1 10 5 is_stmt 1
  10:src/tcb.cpp   ****     return t;
 425              		.loc 1 10 13 is_stmt 0
 426 0264 97000000 		call	_ZN3TCB5startEv
 426      E7800000 
 427              	.LVL33:
  11:src/tcb.cpp   **** }
 428              		.loc 1 11 5 is_stmt 1
  12:src/tcb.cpp   **** 
 429              		.loc 1 12 1 is_stmt 0
 430 026c 13850400 		mv	a0,s1
 431 0270 83308101 		ld	ra,24(sp)
 432              		.cfi_restore 1
 433 0274 03340101 		ld	s0,16(sp)
 434              		.cfi_restore 8
 435              		.cfi_def_cfa 2, 32
 436 0278 83348100 		ld	s1,8(sp)
 437              		.cfi_restore 9
 438              	.LVL34:
 439 027c 13010102 		addi	sp,sp,32
 440              		.cfi_def_cfa_offset 0
 441 0280 67800000 		jr	ra
 442              		.cfi_endproc
 443              	.LFE47:
 445              		.globl	_ZN3TCB2IDE
 446              		.globl	_ZN3TCB16timeSliceCounterE
 447              		.globl	_ZN3TCB7runningE
 448              		.bss
 449              		.align	3
 450              		.set	.LANCHOR0,. + 0
 453              	_ZN3TCB7runningE:
 454 0000 00000000 		.zero	8
 454      00000000 
 457              	_ZN3TCB16timeSliceCounterE:
 458 0008 00000000 		.zero	8
 458      00000000 
 461              	_ZN3TCB2IDE:
 462 0010 00000000 		.zero	8
 462      00000000 
 463              		.text
 464              	.Letext0:
 465              		.file 4 "src/../h/../lib/hw.h"
 466              		.file 5 "src/../h/scheduler.hpp"
 467              		.file 6 "src/../h/../lib/mem.h"
GAS LISTING /tmp/ccxl7jBB.s 			page 15


 468              		.file 7 "src/../h/../test/../h/syscall_c.hpp"
GAS LISTING /tmp/ccxl7jBB.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/ccxl7jBB.s:9      .text:0000000000000000 _ZN3TCB13threadWrapperEv
     /tmp/ccxl7jBB.s:13     .text:0000000000000000 .L0 
     /tmp/ccxl7jBB.s:14     .text:0000000000000000 .L0 
     /tmp/ccxl7jBB.s:15     .text:0000000000000004 .L0 
     /tmp/ccxl7jBB.s:18     .text:000000000000000c .L0 
     /tmp/ccxl7jBB.s:19     .text:000000000000000c .L0 
     /tmp/ccxl7jBB.s:21     .text:0000000000000010 .L0 
     /tmp/ccxl7jBB.s:23     .text:0000000000000010 .L0 
     /tmp/ccxl7jBB.s:24     .text:0000000000000010 .L0 
     /tmp/ccxl7jBB.s:27     .text:0000000000000018 .L0 
     /tmp/ccxl7jBB.s:28     .text:0000000000000018 .L0 
     /tmp/ccxl7jBB.s:31     .text:0000000000000024 .L0 
     /tmp/ccxl7jBB.s:35     .text:000000000000002c .L0 
     /tmp/ccxl7jBB.s:36     .text:000000000000002c .L0 
     /tmp/ccxl7jBB.s:39     .text:0000000000000034 .L0 
     /tmp/ccxl7jBB.s:40     .text:0000000000000038 .L0 
     /tmp/ccxl7jBB.s:42     .text:000000000000003c .L0 
     /tmp/ccxl7jBB.s:43     .text:000000000000003c .L0 
     /tmp/ccxl7jBB.s:45     .text:0000000000000040 .L0 
     /tmp/ccxl7jBB.s:47     .text:0000000000000044 .L0 
     /tmp/ccxl7jBB.s:53     .text:0000000000000044 _ZN3TCB8dispatchEv
     /tmp/ccxl7jBB.s:56     .text:0000000000000044 .L0 
     /tmp/ccxl7jBB.s:57     .text:0000000000000044 .L0 
     /tmp/ccxl7jBB.s:58     .text:0000000000000048 .L0 
     /tmp/ccxl7jBB.s:62     .text:0000000000000054 .L0 
     /tmp/ccxl7jBB.s:63     .text:0000000000000054 .L0 
     /tmp/ccxl7jBB.s:64     .text:0000000000000054 .L0 
     /tmp/ccxl7jBB.s:66     .text:0000000000000058 .L0 
     /tmp/ccxl7jBB.s:68     .text:0000000000000058 .L0 
     /tmp/ccxl7jBB.s:69     .text:0000000000000058 .L0 
     /tmp/ccxl7jBB.s:72     .text:0000000000000064 .L0 
     /tmp/ccxl7jBB.s:73     .text:0000000000000064 .L0 
     /tmp/ccxl7jBB.s:79     .text:0000000000000068 .L0 
     /tmp/ccxl7jBB.s:80     .text:0000000000000068 .L0 
     /tmp/ccxl7jBB.s:81     .text:0000000000000068 .L0 
     /tmp/ccxl7jBB.s:86     .text:000000000000006c .L0 
     /tmp/ccxl7jBB.s:89     .text:0000000000000074 .L0 
     /tmp/ccxl7jBB.s:93     .text:000000000000007c .L0 
     /tmp/ccxl7jBB.s:94     .text:000000000000007c .L0 
     /tmp/ccxl7jBB.s:97     .text:0000000000000084 .L0 
     /tmp/ccxl7jBB.s:99     .text:000000000000008c .L0 
     /tmp/ccxl7jBB.s:100    .text:000000000000008c .L0 
     /tmp/ccxl7jBB.s:103    .text:0000000000000094 .L0 
     /tmp/ccxl7jBB.s:104    .text:0000000000000094 .L0 
     /tmp/ccxl7jBB.s:106    .text:0000000000000098 .L0 
     /tmp/ccxl7jBB.s:112    .text:000000000000009c .L0 
     /tmp/ccxl7jBB.s:113    .text:000000000000009c .L0 
     /tmp/ccxl7jBB.s:114    .text:000000000000009c .L0 
     /tmp/ccxl7jBB.s:125    .text:00000000000000a4 .L0 
     /tmp/ccxl7jBB.s:126    .text:00000000000000a4 .L0 
     /tmp/ccxl7jBB.s:131    .text:00000000000000b4 .L0 
     /tmp/ccxl7jBB.s:132    .text:00000000000000b8 .L0 
     /tmp/ccxl7jBB.s:133    .text:00000000000000b8 .L0 
     /tmp/ccxl7jBB.s:135    .text:00000000000000bc .L0 
     /tmp/ccxl7jBB.s:136    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccxl7jBB.s 			page 17


     /tmp/ccxl7jBB.s:138    .text:00000000000000c0 .L0 
     /tmp/ccxl7jBB.s:141    .text:00000000000000c4 .L0 
     /tmp/ccxl7jBB.s:145    .text:00000000000000c8 .L0 
     /tmp/ccxl7jBB.s:147    .text:00000000000000c8 .L0 
     /tmp/ccxl7jBB.s:148    .text:00000000000000c8 .L0 
     /tmp/ccxl7jBB.s:151    .text:00000000000000d0 .L0 
     /tmp/ccxl7jBB.s:152    .text:00000000000000d0 .L0 
     /tmp/ccxl7jBB.s:161    .text:00000000000000e0 .L0 
     /tmp/ccxl7jBB.s:162    .text:00000000000000e0 .L0 
     /tmp/ccxl7jBB.s:163    .text:00000000000000e0 .L0 
     /tmp/ccxl7jBB.s:170    .text:00000000000000e8 .L0 
     /tmp/ccxl7jBB.s:173    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:179    .text:00000000000000ec _ZN3TCB4exitEv
     /tmp/ccxl7jBB.s:182    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:183    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:184    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:185    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:188    .text:00000000000000f8 .L0 
     /tmp/ccxl7jBB.s:191    .text:0000000000000100 .L0 
     /tmp/ccxl7jBB.s:192    .text:0000000000000104 .L0 
     /tmp/ccxl7jBB.s:195    .text:000000000000010c .L0 
     /tmp/ccxl7jBB.s:196    .text:000000000000010c .L0 
     /tmp/ccxl7jBB.s:198    .text:0000000000000110 .L0 
     /tmp/ccxl7jBB.s:200    .text:0000000000000110 .L0 
     /tmp/ccxl7jBB.s:201    .text:0000000000000110 .L0 
     /tmp/ccxl7jBB.s:204    .text:0000000000000118 .L0 
     /tmp/ccxl7jBB.s:205    .text:0000000000000118 .L0 
     /tmp/ccxl7jBB.s:208    .text:0000000000000120 .L0 
     /tmp/ccxl7jBB.s:209    .text:0000000000000120 .L0 
     /tmp/ccxl7jBB.s:211    .text:0000000000000124 .L0 
     /tmp/ccxl7jBB.s:212    .text:0000000000000128 .L0 
     /tmp/ccxl7jBB.s:214    .text:000000000000012c .L0 
     /tmp/ccxl7jBB.s:215    .text:000000000000012c .L0 
     /tmp/ccxl7jBB.s:217    .text:0000000000000130 .L0 
     /tmp/ccxl7jBB.s:221    .text:0000000000000134 .L0 
     /tmp/ccxl7jBB.s:223    .text:0000000000000138 .L0 
     /tmp/ccxl7jBB.s:224    .text:000000000000013c .L0 
     /tmp/ccxl7jBB.s:230    .text:000000000000013c _ZN3TCB5startEv
     /tmp/ccxl7jBB.s:233    .text:000000000000013c .L0 
     /tmp/ccxl7jBB.s:235    .text:000000000000013c .L0 
     /tmp/ccxl7jBB.s:236    .text:000000000000013c .L0 
     /tmp/ccxl7jBB.s:237    .text:000000000000013c .L0 
     /tmp/ccxl7jBB.s:239    .text:0000000000000140 .L0 
     /tmp/ccxl7jBB.s:241    .text:0000000000000144 .L0 
     /tmp/ccxl7jBB.s:242    .text:0000000000000144 .L0 
     /tmp/ccxl7jBB.s:245    .text:000000000000014c .L0 
     /tmp/ccxl7jBB.s:246    .text:000000000000014c .L0 
     /tmp/ccxl7jBB.s:248    .text:0000000000000150 .L0 
     /tmp/ccxl7jBB.s:250    .text:0000000000000154 .L0 
     /tmp/ccxl7jBB.s:253    .text:0000000000000158 .L0 
     /tmp/ccxl7jBB.s:257    .text:000000000000015c .L0 
     /tmp/ccxl7jBB.s:258    .text:0000000000000160 .L0 
     /tmp/ccxl7jBB.s:261    .text:0000000000000168 .L0 
     /tmp/ccxl7jBB.s:262    .text:0000000000000168 .L0 
     /tmp/ccxl7jBB.s:264    .text:000000000000016c .L0 
     /tmp/ccxl7jBB.s:266    .text:000000000000016c .L0 
     /tmp/ccxl7jBB.s:267    .text:000000000000016c .L0 
GAS LISTING /tmp/ccxl7jBB.s 			page 18


     /tmp/ccxl7jBB.s:270    .text:0000000000000174 .L0 
     /tmp/ccxl7jBB.s:272    .text:0000000000000178 .L0 
     /tmp/ccxl7jBB.s:273    .text:000000000000017c .L0 
     /tmp/ccxl7jBB.s:275    .text:0000000000000180 .L0 
     /tmp/ccxl7jBB.s:276    .text:0000000000000180 .L0 
     /tmp/ccxl7jBB.s:278    .text:0000000000000184 .L0 
     /tmp/ccxl7jBB.s:283    .text:0000000000000188 .L0 
     /tmp/ccxl7jBB.s:286    .text:0000000000000190 .L0 
     /tmp/ccxl7jBB.s:292    .text:0000000000000190 _ZN3TCB16initializeThreadEPFvPvES0_Pm
     /tmp/ccxl7jBB.s:295    .text:0000000000000190 .L0 
     /tmp/ccxl7jBB.s:297    .text:0000000000000190 .L0 
     /tmp/ccxl7jBB.s:298    .text:0000000000000194 .L0 
     /tmp/ccxl7jBB.s:304    .text:00000000000001a8 .L0 
     /tmp/ccxl7jBB.s:305    .text:00000000000001a8 .L0 
     /tmp/ccxl7jBB.s:306    .text:00000000000001a8 .L0 
     /tmp/ccxl7jBB.s:307    .text:00000000000001a8 .L0 
     /tmp/ccxl7jBB.s:308    .text:00000000000001a8 .L0 
     /tmp/ccxl7jBB.s:310    .text:00000000000001ac .L0 
     /tmp/ccxl7jBB.s:318    .text:00000000000001b8 .L0 
     /tmp/ccxl7jBB.s:319    .text:00000000000001b8 .L0 
     /tmp/ccxl7jBB.s:320    .text:00000000000001b8 .L0 
     /tmp/ccxl7jBB.s:329    .text:00000000000001c4 .L0 
     /tmp/ccxl7jBB.s:332    .text:00000000000001cc .L0 
     /tmp/ccxl7jBB.s:336    .text:00000000000001d4 .L0 
     /tmp/ccxl7jBB.s:340    .text:00000000000001e4 .L0 
     /tmp/ccxl7jBB.s:342    .text:00000000000001e8 .L0 
     /tmp/ccxl7jBB.s:347    .text:00000000000001f0 .L0 
     /tmp/ccxl7jBB.s:351    .text:00000000000001fc .L0 
     /tmp/ccxl7jBB.s:352    .text:00000000000001fc .L0 
     /tmp/ccxl7jBB.s:357    .text:0000000000000210 .L0 
     /tmp/ccxl7jBB.s:359    .text:0000000000000214 .L0 
     /tmp/ccxl7jBB.s:360    .text:0000000000000214 .L0 
     /tmp/ccxl7jBB.s:365    .text:0000000000000218 .L0 
     /tmp/ccxl7jBB.s:366    .text:000000000000021c .L0 
     /tmp/ccxl7jBB.s:367    .text:000000000000021c .L0 
     /tmp/ccxl7jBB.s:369    .text:0000000000000220 .L0 
     /tmp/ccxl7jBB.s:370    .text:0000000000000220 .L0 
     /tmp/ccxl7jBB.s:372    .text:0000000000000224 .L0 
     /tmp/ccxl7jBB.s:374    .text:0000000000000228 .L0 
     /tmp/ccxl7jBB.s:377    .text:000000000000022c .L0 
     /tmp/ccxl7jBB.s:380    .text:0000000000000230 .L0 
     /tmp/ccxl7jBB.s:384    .text:0000000000000234 .L0 
     /tmp/ccxl7jBB.s:388    .text:0000000000000234 .L0 
     /tmp/ccxl7jBB.s:392    .text:000000000000023c .L0 
     /tmp/ccxl7jBB.s:397    .text:0000000000000244 .L0 
     /tmp/ccxl7jBB.s:403    .text:0000000000000244 _ZN3TCB12createThreadEPFvPvES0_Pm
     /tmp/ccxl7jBB.s:406    .text:0000000000000244 .L0 
     /tmp/ccxl7jBB.s:408    .text:0000000000000244 .L0 
     /tmp/ccxl7jBB.s:409    .text:0000000000000248 .L0 
     /tmp/ccxl7jBB.s:413    .text:0000000000000254 .L0 
     /tmp/ccxl7jBB.s:414    .text:0000000000000254 .L0 
     /tmp/ccxl7jBB.s:415    .text:0000000000000254 .L0 
     /tmp/ccxl7jBB.s:417    .text:0000000000000258 .L0 
     /tmp/ccxl7jBB.s:419    .text:0000000000000258 .L0 
     /tmp/ccxl7jBB.s:420    .text:0000000000000258 .L0 
     /tmp/ccxl7jBB.s:425    .text:0000000000000264 .L0 
     /tmp/ccxl7jBB.s:426    .text:0000000000000264 .L0 
GAS LISTING /tmp/ccxl7jBB.s 			page 19


     /tmp/ccxl7jBB.s:429    .text:000000000000026c .L0 
     /tmp/ccxl7jBB.s:430    .text:000000000000026c .L0 
     /tmp/ccxl7jBB.s:432    .text:0000000000000274 .L0 
     /tmp/ccxl7jBB.s:434    .text:0000000000000278 .L0 
     /tmp/ccxl7jBB.s:435    .text:0000000000000278 .L0 
     /tmp/ccxl7jBB.s:437    .text:000000000000027c .L0 
     /tmp/ccxl7jBB.s:440    .text:0000000000000280 .L0 
     /tmp/ccxl7jBB.s:442    .text:0000000000000284 .L0 
     /tmp/ccxl7jBB.s:461    .bss:0000000000000010 _ZN3TCB2IDE
     /tmp/ccxl7jBB.s:457    .bss:0000000000000008 _ZN3TCB16timeSliceCounterE
     /tmp/ccxl7jBB.s:453    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/ccxl7jBB.s:450    .bss:0000000000000000 .LANCHOR0
     /tmp/ccxl7jBB.s:469    .text:0000000000000284 .L0 
     /tmp/ccxl7jBB.s:28     .text:0000000000000018 .L0 
     /tmp/ccxl7jBB.s:69     .text:0000000000000058 .L0 
     /tmp/ccxl7jBB.s:97     .text:0000000000000084 .L0 
     /tmp/ccxl7jBB.s:185    .text:00000000000000ec .L0 
     /tmp/ccxl7jBB.s:337    .text:00000000000001d8 .L0 
     /tmp/ccxl7jBB.s:352    .text:00000000000001fc .L0 
     /tmp/ccxl7jBB.s:91     .text:000000000000007c .L4
     /tmp/ccxl7jBB.s:144    .text:00000000000000c8 .L8
     /tmp/ccxl7jBB.s:156    .text:00000000000000e0 .L5
     /tmp/ccxl7jBB.s:121    .text:00000000000000a4 .L6
     /tmp/ccxl7jBB.s:219    .text:0000000000000134 .L11
     /tmp/ccxl7jBB.s:281    .text:0000000000000188 .L18
     /tmp/ccxl7jBB.s:255    .text:000000000000015c .L24
     /tmp/ccxl7jBB.s:383    .text:0000000000000234 .L28
     /tmp/ccxl7jBB.s:390    .text:000000000000023c .L29
     /tmp/ccxl7jBB.s:334    .text:00000000000001d4 .L26
     /tmp/ccxl7jBB.s:345    .text:00000000000001f0 .L27
     /tmp/ccxl7jBB.s:1690   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccxl7jBB.s:3237   .debug_str:000000000000063e .LASF131
     /tmp/ccxl7jBB.s:3141   .debug_str:00000000000003bd .LASF132
     /tmp/ccxl7jBB.s:3193   .debug_str:0000000000000503 .LASF133
     /tmp/ccxl7jBB.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccxl7jBB.s:464    .text:0000000000000284 .Letext0
     /tmp/ccxl7jBB.s:3005   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccxl7jBB.s:3155   .debug_str:000000000000041a .LASF0
     /tmp/ccxl7jBB.s:3169   .debug_str:0000000000000452 .LASF1
     /tmp/ccxl7jBB.s:3147   .debug_str:00000000000003de .LASF2
     /tmp/ccxl7jBB.s:3115   .debug_str:0000000000000317 .LASF4
     /tmp/ccxl7jBB.s:3213   .debug_str:0000000000000591 .LASF3
     /tmp/ccxl7jBB.s:3033   .debug_str:00000000000000ad .LASF5
     /tmp/ccxl7jBB.s:3173   .debug_str:000000000000046d .LASF6
     /tmp/ccxl7jBB.s:3153   .debug_str:0000000000000407 .LASF7
     /tmp/ccxl7jBB.s:3251   .debug_str:0000000000000755 .LASF8
     /tmp/ccxl7jBB.s:3101   .debug_str:000000000000029b .LASF9
     /tmp/ccxl7jBB.s:3189   .debug_str:00000000000004e1 .LASF10
     /tmp/ccxl7jBB.s:3241   .debug_str:000000000000070a .LASF11
     /tmp/ccxl7jBB.s:3039   .debug_str:00000000000000c5 .LASF12
     /tmp/ccxl7jBB.s:3011   .debug_str:0000000000000037 .LASF13
     /tmp/ccxl7jBB.s:3055   .debug_str:0000000000000147 .LASF14
     /tmp/ccxl7jBB.s:3203   .debug_str:0000000000000545 .LASF15
     /tmp/ccxl7jBB.s:3069   .debug_str:000000000000019e .LASF16
     /tmp/ccxl7jBB.s:3185   .debug_str:00000000000004d1 .LASF17
     /tmp/ccxl7jBB.s:3093   .debug_str:000000000000025a .LASF39
     /tmp/ccxl7jBB.s:3109   .debug_str:00000000000002ca .LASF134
GAS LISTING /tmp/ccxl7jBB.s 			page 20


     /tmp/ccxl7jBB.s:3051   .debug_str:0000000000000125 .LASF135
     /tmp/ccxl7jBB.s:3137   .debug_str:00000000000003a6 .LASF136
     /tmp/ccxl7jBB.s:3107   .debug_str:00000000000002c4 .LASF53
     /tmp/ccxl7jBB.s:3239   .debug_str:0000000000000702 .LASF18
     /tmp/ccxl7jBB.s:3187   .debug_str:00000000000004db .LASF19
     /tmp/ccxl7jBB.s:3181   .debug_str:00000000000004b3 .LASF20
     /tmp/ccxl7jBB.s:3117   .debug_str:000000000000031e .LASF21
     /tmp/ccxl7jBB.s:3223   .debug_str:00000000000005de .LASF22
     /tmp/ccxl7jBB.s:3019   .debug_str:0000000000000065 .LASF137
     /tmp/ccxl7jBB.s:3077   .debug_str:00000000000001f5 .LASF29
     /tmp/ccxl7jBB.s:3015   .debug_str:0000000000000050 .LASF31
     /tmp/ccxl7jBB.s:3175   .debug_str:0000000000000480 .LASF23
     /tmp/ccxl7jBB.s:3099   .debug_str:0000000000000284 .LASF25
     /tmp/ccxl7jBB.s:3139   .debug_str:00000000000003b0 .LASF24
     /tmp/ccxl7jBB.s:3031   .debug_str:0000000000000094 .LASF26
     /tmp/ccxl7jBB.s:3167   .debug_str:000000000000044c .LASF27
     /tmp/ccxl7jBB.s:3145   .debug_str:00000000000003ce .LASF28
     /tmp/ccxl7jBB.s:3129   .debug_str:0000000000000366 .LASF30
     /tmp/ccxl7jBB.s:3273   .debug_str:00000000000007fb .LASF32
     /tmp/ccxl7jBB.s:3195   .debug_str:0000000000000523 .LASF33
     /tmp/ccxl7jBB.s:3257   .debug_str:0000000000000786 .LASF34
     /tmp/ccxl7jBB.s:3007   .debug_str:0000000000000000 .LASF35
     /tmp/ccxl7jBB.s:3081   .debug_str:0000000000000203 .LASF138
     /tmp/ccxl7jBB.s:3265   .debug_str:00000000000007ca .LASF36
     /tmp/ccxl7jBB.s:3229   .debug_str:0000000000000614 .LASF37
     /tmp/ccxl7jBB.s:3071   .debug_str:00000000000001b4 .LASF38
     /tmp/ccxl7jBB.s:3199   .debug_str:000000000000052d .LASF64
     /tmp/ccxl7jBB.s:3179   .debug_str:000000000000049c .LASF139
     /tmp/ccxl7jBB.s:3123   .debug_str:000000000000034e .LASF40
     /tmp/ccxl7jBB.s:3057   .debug_str:0000000000000153 .LASF41
     /tmp/ccxl7jBB.s:3127   .debug_str:000000000000035e .LASF42
     /tmp/ccxl7jBB.s:3161   .debug_str:0000000000000437 .LASF43
     /tmp/ccxl7jBB.s:3027   .debug_str:0000000000000089 .LASF44
     /tmp/ccxl7jBB.s:3133   .debug_str:0000000000000380 .LASF46
     /tmp/ccxl7jBB.s:3047   .debug_str:00000000000000f0 .LASF48
     /tmp/ccxl7jBB.s:3259   .debug_str:0000000000000797 .LASF45
     /tmp/ccxl7jBB.s:3111   .debug_str:00000000000002de .LASF140
     /tmp/ccxl7jBB.s:3159   .debug_str:000000000000042e .LASF47
     /tmp/ccxl7jBB.s:3087   .debug_str:0000000000000227 .LASF49
     /tmp/ccxl7jBB.s:3211   .debug_str:000000000000058c .LASF58
     /tmp/ccxl7jBB.s:3277   .debug_str:0000000000000835 .LASF60
     /tmp/ccxl7jBB.s:3215   .debug_str:00000000000005a3 .LASF50
     /tmp/ccxl7jBB.s:3089   .debug_str:000000000000023a .LASF51
     /tmp/ccxl7jBB.s:3165   .debug_str:0000000000000446 .LASF52
     /tmp/ccxl7jBB.s:3073   .debug_str:00000000000001c4 .LASF54
     /tmp/ccxl7jBB.s:3063   .debug_str:0000000000000179 .LASF55
     /tmp/ccxl7jBB.s:3131   .debug_str:0000000000000373 .LASF56
     /tmp/ccxl7jBB.s:3035   .debug_str:00000000000000b4 .LASF57
     /tmp/ccxl7jBB.s:3201   .debug_str:000000000000053a .LASF59
     /tmp/ccxl7jBB.s:3275   .debug_str:000000000000081d .LASF61
     /tmp/ccxl7jBB.s:3013   .debug_str:0000000000000047 .LASF62
     /tmp/ccxl7jBB.s:3225   .debug_str:00000000000005e7 .LASF67
     /tmp/ccxl7jBB.s:3079   .debug_str:00000000000001fa .LASF63
     /tmp/ccxl7jBB.s:3059   .debug_str:0000000000000159 .LASF65
     /tmp/ccxl7jBB.s:3217   .debug_str:00000000000005b4 .LASF66
     /tmp/ccxl7jBB.s:3191   .debug_str:00000000000004f0 .LASF68
     /tmp/ccxl7jBB.s:3235   .debug_str:0000000000000637 .LASF69
GAS LISTING /tmp/ccxl7jBB.s 			page 21


     /tmp/ccxl7jBB.s:3245   .debug_str:000000000000072a .LASF70
     /tmp/ccxl7jBB.s:3171   .debug_str:0000000000000465 .LASF71
     /tmp/ccxl7jBB.s:3085   .debug_str:0000000000000213 .LASF72
     /tmp/ccxl7jBB.s:3207   .debug_str:000000000000056c .LASF73
     /tmp/ccxl7jBB.s:3219   .debug_str:00000000000005bb .LASF74
     /tmp/ccxl7jBB.s:3083   .debug_str:000000000000020b .LASF75
     /tmp/ccxl7jBB.s:3261   .debug_str:00000000000007a5 .LASF76
     /tmp/ccxl7jBB.s:3283   .debug_str:000000000000085b .LASF77
     /tmp/ccxl7jBB.s:3065   .debug_str:0000000000000185 .LASF78
     /tmp/ccxl7jBB.s:3157   .debug_str:0000000000000427 .LASF79
     /tmp/ccxl7jBB.s:3271   .debug_str:00000000000007e8 .LASF80
     /tmp/ccxl7jBB.s:3247   .debug_str:000000000000073d .LASF81
     /tmp/ccxl7jBB.s:3095   .debug_str:000000000000026b .LASF82
     /tmp/ccxl7jBB.s:3097   .debug_str:000000000000027e .LASF83
     /tmp/ccxl7jBB.s:3233   .debug_str:0000000000000625 .LASF84
     /tmp/ccxl7jBB.s:3025   .debug_str:0000000000000083 .LASF85
     /tmp/ccxl7jBB.s:3289   .debug_str:0000000000000879 .LASF86
     /tmp/ccxl7jBB.s:3281   .debug_str:0000000000000850 .LASF87
     /tmp/ccxl7jBB.s:3209   .debug_str:0000000000000574 .LASF88
     /tmp/ccxl7jBB.s:3125   .debug_str:0000000000000353 .LASF89
     /tmp/ccxl7jBB.s:3227   .debug_str:00000000000005fc .LASF90
     /tmp/ccxl7jBB.s:3053   .debug_str:000000000000013d .LASF91
     /tmp/ccxl7jBB.s:3183   .debug_str:00000000000004bb .LASF92
     /tmp/ccxl7jBB.s:3149   .debug_str:00000000000003ec .LASF93
     /tmp/ccxl7jBB.s:3105   .debug_str:00000000000002ae .LASF94
     /tmp/ccxl7jBB.s:3231   .debug_str:0000000000000620 .LASF95
     /tmp/ccxl7jBB.s:3177   .debug_str:000000000000048b .LASF96
     /tmp/ccxl7jBB.s:3103   .debug_str:00000000000002a9 .LASF97
     /tmp/ccxl7jBB.s:3151   .debug_str:00000000000003f6 .LASF98
     /tmp/ccxl7jBB.s:3023   .debug_str:000000000000007e .LASF99
     /tmp/ccxl7jBB.s:3121   .debug_str:000000000000033d .LASF100
     /tmp/ccxl7jBB.s:3037   .debug_str:00000000000000c0 .LASF101
     /tmp/ccxl7jBB.s:3009   .debug_str:0000000000000026 .LASF102
     /tmp/ccxl7jBB.s:3029   .debug_str:000000000000008f .LASF103
     /tmp/ccxl7jBB.s:3243   .debug_str:0000000000000719 .LASF104
     /tmp/ccxl7jBB.s:3163   .debug_str:0000000000000441 .LASF105
     /tmp/ccxl7jBB.s:3045   .debug_str:00000000000000df .LASF106
     /tmp/ccxl7jBB.s:3267   .debug_str:00000000000007d7 .LASF107
     /tmp/ccxl7jBB.s:3205   .debug_str:000000000000055b .LASF108
     /tmp/ccxl7jBB.s:3041   .debug_str:00000000000000d5 .LASF109
     /tmp/ccxl7jBB.s:3113   .debug_str:0000000000000306 .LASF110
     /tmp/ccxl7jBB.s:3143   .debug_str:00000000000003c9 .LASF111
     /tmp/ccxl7jBB.s:3263   .debug_str:00000000000007b9 .LASF112
     /tmp/ccxl7jBB.s:3043   .debug_str:00000000000000da .LASF113
     /tmp/ccxl7jBB.s:3021   .debug_str:000000000000006d .LASF114
     /tmp/ccxl7jBB.s:3061   .debug_str:000000000000016e .LASF115
     /tmp/ccxl7jBB.s:3135   .debug_str:000000000000038e .LASF116
     /tmp/ccxl7jBB.s:3221   .debug_str:00000000000005cf .LASF117
     /tmp/ccxl7jBB.s:3049   .debug_str:0000000000000109 .LASF118
     /tmp/ccxl7jBB.s:3255   .debug_str:0000000000000771 .LASF119
     /tmp/ccxl7jBB.s:3075   .debug_str:00000000000001d3 .LASF120
     /tmp/ccxl7jBB.s:3017   .debug_str:000000000000005c .LASF121
     /tmp/ccxl7jBB.s:3287   .debug_str:0000000000000868 .LASF122
     /tmp/ccxl7jBB.s:3091   .debug_str:000000000000023f .LASF123
     /tmp/ccxl7jBB.s:3269   .debug_str:00000000000007dc .LASF124
     /tmp/ccxl7jBB.s:293    .text:0000000000000190 .LFB52
     /tmp/ccxl7jBB.s:398    .text:0000000000000244 .LFE52
GAS LISTING /tmp/ccxl7jBB.s 			page 22


     /tmp/ccxl7jBB.s:2719   .debug_loc:0000000000000000 .LLST4
     /tmp/ccxl7jBB.s:2739   .debug_loc:000000000000005d .LLST5
     /tmp/ccxl7jBB.s:2759   .debug_loc:00000000000000ba .LLST6
     /tmp/ccxl7jBB.s:316    .text:00000000000001b8 .LBB19
     /tmp/ccxl7jBB.s:325    .text:00000000000001c4 .LBE19
     /tmp/ccxl7jBB.s:2788   .debug_loc:000000000000012f .LLST7
     /tmp/ccxl7jBB.s:323    .text:00000000000001c4 .LVL23
     /tmp/ccxl7jBB.s:326    .text:00000000000001c4 .LBB21
     /tmp/ccxl7jBB.s:2997   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccxl7jBB.s:2797   .debug_loc:0000000000000154 .LLST8
     /tmp/ccxl7jBB.s:2810   .debug_loc:000000000000018c .LLST9
     /tmp/ccxl7jBB.s:2835   .debug_loc:00000000000001ee .LLST10
     /tmp/ccxl7jBB.s:2846   .debug_loc:0000000000000224 .LLST11
     /tmp/ccxl7jBB.s:2857   .debug_loc:000000000000025a .LLST12
     /tmp/ccxl7jBB.s:231    .text:000000000000013c .LFB51
     /tmp/ccxl7jBB.s:287    .text:0000000000000190 .LFE51
     /tmp/ccxl7jBB.s:3067   .debug_str:0000000000000199 .LASF127
     /tmp/ccxl7jBB.s:2868   .debug_loc:0000000000000290 .LLST3
     /tmp/ccxl7jBB.s:268    .text:0000000000000174 .LVL17
     /tmp/ccxl7jBB.s:180    .text:00000000000000ec .LFB50
     /tmp/ccxl7jBB.s:225    .text:000000000000013c .LFE50
     /tmp/ccxl7jBB.s:206    .text:0000000000000120 .LVL13
     /tmp/ccxl7jBB.s:10     .text:0000000000000000 .LFB49
     /tmp/ccxl7jBB.s:48     .text:0000000000000044 .LFE49
     /tmp/ccxl7jBB.s:25     .text:0000000000000018 .LVL0
     /tmp/ccxl7jBB.s:37     .text:0000000000000034 .LVL2
     /tmp/ccxl7jBB.s:54     .text:0000000000000044 .LFB48
     /tmp/ccxl7jBB.s:174    .text:00000000000000ec .LFE48
     /tmp/ccxl7jBB.s:2904   .debug_loc:000000000000031b .LLST0
     /tmp/ccxl7jBB.s:76     .text:0000000000000068 .LBB13
     /tmp/ccxl7jBB.s:84     .text:000000000000006c .LBE13
     /tmp/ccxl7jBB.s:2915   .debug_loc:0000000000000351 .LLST1
     /tmp/ccxl7jBB.s:109    .text:000000000000009c .LBB15
     /tmp/ccxl7jBB.s:123    .text:00000000000000a4 .LBE15
     /tmp/ccxl7jBB.s:2922   .debug_loc:0000000000000374 .LLST2
     /tmp/ccxl7jBB.s:159    .text:00000000000000e0 .LBB17
     /tmp/ccxl7jBB.s:172    .text:00000000000000ec .LBE17
     /tmp/ccxl7jBB.s:95     .text:0000000000000084 .LVL5
     /tmp/ccxl7jBB.s:129    .text:00000000000000b4 .LVL8
     /tmp/ccxl7jBB.s:154    .text:00000000000000dc .LVL11
     /tmp/ccxl7jBB.s:404    .text:0000000000000244 .LFB47
     /tmp/ccxl7jBB.s:443    .text:0000000000000284 .LFE47
     /tmp/ccxl7jBB.s:2931   .debug_loc:000000000000039a .LLST13
     /tmp/ccxl7jBB.s:2945   .debug_loc:00000000000003d3 .LLST14
     /tmp/ccxl7jBB.s:2959   .debug_loc:000000000000040c .LLST15
     /tmp/ccxl7jBB.s:2973   .debug_loc:0000000000000445 .LLST16
     /tmp/ccxl7jBB.s:421    .text:0000000000000260 .LVL31
     /tmp/ccxl7jBB.s:427    .text:000000000000026c .LVL33
     /tmp/ccxl7jBB.s:3285   .debug_str:0000000000000863 .LASF125
     /tmp/ccxl7jBB.s:3119   .debug_str:0000000000000326 .LASF141
     /tmp/ccxl7jBB.s:3197   .debug_str:0000000000000528 .LASF126
     /tmp/ccxl7jBB.s:3253   .debug_str:0000000000000765 .LASF128
     /tmp/ccxl7jBB.s:3249   .debug_str:0000000000000744 .LASF129
     /tmp/ccxl7jBB.s:3279   .debug_str:0000000000000844 .LASF130
     /tmp/ccxl7jBB.s:296    .text:0000000000000190 .LVL20
     /tmp/ccxl7jBB.s:321    .text:00000000000001bc .LVL22
     /tmp/ccxl7jBB.s:375    .text:0000000000000228 .LVL26
GAS LISTING /tmp/ccxl7jBB.s 			page 23


     /tmp/ccxl7jBB.s:382    .text:0000000000000234 .LVL28
     /tmp/ccxl7jBB.s:378    .text:000000000000022c .LVL27
     /tmp/ccxl7jBB.s:344    .text:00000000000001f0 .LVL24
     /tmp/ccxl7jBB.s:393    .text:0000000000000240 .LVL29
     /tmp/ccxl7jBB.s:315    .text:00000000000001b8 .LVL21
     /tmp/ccxl7jBB.s:361    .text:0000000000000218 .LVL25
     /tmp/ccxl7jBB.s:234    .text:000000000000013c .LVL14
     /tmp/ccxl7jBB.s:251    .text:0000000000000158 .LVL15
     /tmp/ccxl7jBB.s:254    .text:000000000000015c .LVL16
     /tmp/ccxl7jBB.s:280    .text:0000000000000188 .LVL18
     /tmp/ccxl7jBB.s:284    .text:000000000000018c .LVL19
     /tmp/ccxl7jBB.s:74     .text:0000000000000068 .LVL3
     /tmp/ccxl7jBB.s:139    .text:00000000000000c0 .LVL9
     /tmp/ccxl7jBB.s:143    .text:00000000000000c8 .LVL10
     /tmp/ccxl7jBB.s:82     .text:000000000000006c .LVL4
     /tmp/ccxl7jBB.s:108    .text:000000000000009c .LVL6
     /tmp/ccxl7jBB.s:119    .text:00000000000000a4 .LVL7
     /tmp/ccxl7jBB.s:407    .text:0000000000000244 .LVL30
     /tmp/ccxl7jBB.s:423    .text:0000000000000264 .LVL32
     /tmp/ccxl7jBB.s:438    .text:000000000000027c .LVL34
     /tmp/ccxl7jBB.s:470    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccxl7jBB.s:363    .text:0000000000000218 .LBE21
     /tmp/ccxl7jBB.s:385    .text:0000000000000234 .LBB24
     /tmp/ccxl7jBB.s:396    .text:0000000000000244 .LBE24

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3TCB
__mem_alloc
